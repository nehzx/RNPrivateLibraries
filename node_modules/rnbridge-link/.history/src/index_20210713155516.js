import ReactNative from "react-native";

class NativeBridgeCaller {
  caller = ReactNative.NativeModules.UNPJSBridge.call;
  formatParams(params) {
    let format;
    Object.keys(params).map((k) => {
      const value = params[k];
      if (typeof value === "object") {
        params[k] = JSON.stringify(value);
      }
    });

    try {
      format = encodeURIComponent(JSON.stringify(params));
    } catch (e) {
      format = encodeURIComponent(JSON.stringify({}));
    }
    return format;
  }
  parseResult(result) {
    let res;
    try {
      res = JSON.parse(decodeURIComponent(result));
    } catch (e) {
      res = {
        success: false,
        error: {
          message: e.toString(),
        },
      };
    }
    return res;
  }
  async call(api, params = {}) {
    const uri = `unipal://${api}?params=${this.formatParams(params)}`;
    return this.caller(uri).then(
      (res) => {
        const p = this.parseResult(res);
        if (p.success) {
          return Promise.resolve(p.data);
        }
        return Promise.reject(p.error);
      },
      (e) => {
        const res = {
          success: false,
          error: {
            message: e.toString(),
          },
        };
        return Promise.reject(res);
      }
    );
  }
}
class NativeBridge {
  caller = new NativeBridgeCaller();
}
export default new NativeBridge();
