import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { PureComponent } from 'react';
import classnames from 'classnames';
import Popup from '../popup';

var ActionSheet = /*#__PURE__*/function (_PureComponent) {
  _inherits(ActionSheet, _PureComponent);

  var _super = _createSuper(ActionSheet);

  function ActionSheet() {
    var _this;

    _classCallCheck(this, ActionSheet);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _this.renderActions = function (action, index) {
      var prefixCls = _this.props.prefixCls;
      var actionCls = classnames("".concat(prefixCls, "__item"), action.className, _defineProperty({}, "".concat(prefixCls, "__item--").concat(action.theme), !!action.theme));
      return /*#__PURE__*/React.createElement("div", {
        key: +index,
        className: actionCls,
        onClick: action.onClick
      }, action.text);
    };

    _this.renderCancel = function () {
      var _this$props = _this.props,
          prefixCls = _this$props.prefixCls,
          onCancel = _this$props.onCancel,
          cancelText = _this$props.cancelText,
          locale = _this$props.locale;
      return typeof onCancel === 'function' && /*#__PURE__*/React.createElement("div", {
        className: "".concat(prefixCls, "__cancel")
      }, /*#__PURE__*/React.createElement("div", {
        className: "".concat(prefixCls, "__item"),
        onClick: onCancel
      }, cancelText || locale.cancelText));
    };

    return _this;
  }

  _createClass(ActionSheet, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          prefixCls = _this$props2.prefixCls,
          className = _this$props2.className,
          spacing = _this$props2.spacing,
          visible = _this$props2.visible,
          onMaskClick = _this$props2.onMaskClick,
          actions = _this$props2.actions,
          destroy = _this$props2.destroy;
      var cls = classnames(prefixCls, _defineProperty({}, "".concat(prefixCls, "--spacing"), spacing));
      return /*#__PURE__*/React.createElement(Popup, {
        className: className,
        visible: visible,
        onMaskClick: onMaskClick,
        destroy: destroy
      }, /*#__PURE__*/React.createElement("div", {
        className: cls
      }, /*#__PURE__*/React.createElement("div", {
        className: "".concat(prefixCls, "__actions")
      }, actions.map(this.renderActions)), this.renderCancel()));
    }
  }]);

  return ActionSheet;
}(PureComponent);

ActionSheet.defaultProps = {
  prefixCls: 'za-action-sheet',
  visible: false,
  spacing: false,
  actions: [],
  destroy: true
};
export { ActionSheet as default };