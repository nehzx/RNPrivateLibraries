import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _regeneratorRuntime from "@babel/runtime/regenerator";
import React from 'react';
import { mount } from 'enzyme';
import Calendar from '../index';
import { date7 } from '../../../tests/testData/date';
var prefixCls = 'za-calendar';
describe('Calendar', function () {
  it('should trigger onChange when single click', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
    var onChangeFn, wrapper, day2;
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            onChangeFn = jest.fn();
            wrapper = mount( /*#__PURE__*/React.createElement(Calendar, {
              min: date7,
              multiple: false,
              onChange: onChangeFn
            }));
            day2 = wrapper.find(".".concat(prefixCls, "__day")).at(15);
            expect(day2.childAt(0).text()).toBe('16');
            day2.simulate('click');
            expect(onChangeFn).toBeCalled();

          case 6:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  })));
  it('should trigger onChange when double click', function () {
    var onChangeFn = jest.fn();
    var wrapper = mount( /*#__PURE__*/React.createElement(Calendar, {
      multiple: false,
      onChange: onChangeFn
    }));
    var day3 = wrapper.find(".".concat(prefixCls, "__day")).at(30);
    var day4 = wrapper.find(".".concat(prefixCls, "__day")).at(20);
    day3.simulate('click');
    day4.simulate('click');
    expect(onChangeFn).toBeCalled();
  });
});