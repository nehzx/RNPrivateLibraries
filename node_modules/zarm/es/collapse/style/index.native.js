import _defineProperty from "@babel/runtime/helpers/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import { StyleSheet } from 'react-native';
import variables from '../../style/themes/default.native';
var border = {
  borderBottomWidth: StyleSheet.hairlineWidth,
  // borderBottomWidth: 1,
  borderBottomColor: variables.theme_default,
  borderStyle: 'solid'
};
export default {
  container: {
    flexDirection: 'column',
    backgroundColor: '#FFF'
  },
  // base
  itemWrapperStyle: {
    width: '100%',
    flexDirection: 'column',
    overflow: 'hidden',
    backgroundColor: '#FFF'
  },
  titleWrapperStyle: {
    backgroundColor: '#FFF',
    height: variables.collapse_height
  },
  titleInnerStyle: _objectSpread({
    height: '100%',
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    backgroundColor: '#FFF',
    // 解决在android下overflow属性无效（使用背景色掩盖文字）
    marginLeft: variables.collapse_padding,
    paddingRight: variables.collapse_padding
  }, border),
  titleTextStyle: {
    fontSize: 15,
    color: '#464646'
  },
  titleTextDisabledStyle: {
    color: '#999'
  },
  titleArrowStyle: {
    borderRightWidth: 2,
    borderBottomWidth: 2,
    borderStyle: 'solid',
    borderColor: variables.collapse_arrow_color,
    width: 10,
    height: 10,
    position: 'relative'
  },
  titleArrowDisabledStyle: {
    borderColor: variables.collapse_arrow_disabled_color
  },
  itemBodyStyle: _objectSpread({
    backgroundColor: '#FFF',
    marginLeft: variables.collapse_padding,
    paddingRight: variables.collapse_padding,
    paddingTop: variables.collapse_padding,
    paddingBottom: variables.collapse_padding
  }, border)
};