import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { PureComponent } from 'react';
import classnames from 'classnames';
import formatFn from '../date-picker-view/utils/format';
import DatePicker from '../date-picker';

var DateSelect = /*#__PURE__*/function (_PureComponent) {
  _inherits(DateSelect, _PureComponent);

  var _super = _createSuper(DateSelect);

  function DateSelect(props) {
    var _this;

    _classCallCheck(this, DateSelect);

    _this = _super.call(this, props);

    _this.handleClick = function () {
      var disabled = _this.props.disabled;

      if (disabled) {
        return false;
      }

      _this.setState({
        visible: true
      });
    };

    _this.onChange = function (selected) {
      var onChange = _this.props.onChange;

      if (typeof onChange === 'function') {
        onChange(selected);
      }
    };

    _this.onOk = function (selected) {
      var onOk = _this.props.onOk;

      _this.setState({
        visible: false,
        selectValue: selected
      });

      if (typeof onOk === 'function') {
        onOk(selected);
      }
    };

    _this.onCancel = function () {
      var onCancel = _this.props.onCancel;

      _this.setState({
        visible: false
      });

      if (typeof onCancel === 'function') {
        onCancel();
      }
    };

    _this.state = {
      visible: false,
      selectValue: props.value
    };
    return _this;
  }

  _createClass(DateSelect, [{
    key: "render",
    value: function render() {
      var _classnames;

      var _this$props = this.props,
          prefixCls = _this$props.prefixCls,
          className = _this$props.className,
          placeholder = _this$props.placeholder,
          disabled = _this$props.disabled,
          onChange = _this$props.onChange,
          locale = _this$props.locale,
          value = _this$props.value,
          hasArrow = _this$props.hasArrow,
          others = _objectWithoutProperties(_this$props, ["prefixCls", "className", "placeholder", "disabled", "onChange", "locale", "value", "hasArrow"]);

      var _this$state = this.state,
          visible = _this$state.visible,
          selectValue = _this$state.selectValue;
      var cls = classnames(prefixCls, (_classnames = {}, _defineProperty(_classnames, "".concat(prefixCls, "--placeholder"), !selectValue), _defineProperty(_classnames, "".concat(prefixCls, "--disabled"), disabled), _defineProperty(_classnames, "".concat(prefixCls, "--arrow"), hasArrow), _classnames));
      return /*#__PURE__*/React.createElement("div", {
        className: cls,
        onClick: this.handleClick
      }, /*#__PURE__*/React.createElement("input", {
        type: "hidden",
        value: formatFn(this, selectValue)
      }), /*#__PURE__*/React.createElement("div", {
        className: "".concat(prefixCls, "__input")
      }, /*#__PURE__*/React.createElement("div", {
        className: "".concat(prefixCls, "__value")
      }, formatFn(this, selectValue) || placeholder || locale.placeholder)), /*#__PURE__*/React.createElement(DatePicker, _extends({}, others, {
        className: className,
        visible: visible,
        value: selectValue,
        onOk: this.onOk,
        onCancel: this.onCancel
      })));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(props) {
      return {
        selectValue: props.value
      };
    }
  }]);

  return DateSelect;
}(PureComponent);

DateSelect.defaultProps = {
  prefixCls: 'za-date-select',
  mode: 'date',
  disabled: false,
  minuteStep: 1,
  valueMember: 'value',
  hasArrow: true,
  onCancel: function onCancel() {}
};
export { DateSelect as default };