import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { PureComponent } from 'react';
import classnames from 'classnames';
import { Keyboard as KeyboardIcon, DeleteKey as DeleteKeyIcon } from '@zarm-design/icons';
var KEYS = {
  number: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '', '0', 'close'],
  price: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '.', '0', 'close'],
  idcard: ['1', '2', '3', '4', '5', '6', '7', '8', '9', 'X', '0', 'close']
};

var Keyboard = /*#__PURE__*/function (_PureComponent) {
  _inherits(Keyboard, _PureComponent);

  var _super = _createSuper(Keyboard);

  function Keyboard() {
    var _this;

    _classCallCheck(this, Keyboard);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.touchLongPressTimer = void 0;
    _this.mouseLongPressTimer = void 0;

    _this.onTouchLongPressIn = function (key) {
      _this.onKeyClick(key);

      _this.touchLongPressTimer = setTimeout(function () {
        _this.touchLongPressTimer = setInterval(function () {
          _this.onKeyClick(key);
        }, 100);
      }, 800);
    };

    _this.onTouchLongPressOut = function (e) {
      e.preventDefault();
      clearInterval(_this.touchLongPressTimer);
    };

    _this.onMouseLongPressIn = function (key) {
      _this.onKeyClick(key);

      _this.mouseLongPressTimer = setTimeout(function () {
        _this.mouseLongPressTimer = setInterval(function () {
          _this.onKeyClick(key);
        }, 100);
      }, 800);
    };

    _this.onMouseLongPressOut = function (e) {
      e.preventDefault();
      clearInterval(_this.mouseLongPressTimer);
    };

    _this.onKeyClick = function (key) {
      if (key.length === 0) {
        return;
      }

      var onKeyClick = _this.props.onKeyClick;

      if (typeof onKeyClick === 'function') {
        onKeyClick(key);
      }
    };

    _this.getKeys = function () {
      var type = _this.props.type;
      return type ? KEYS[type] : KEYS.number;
    };

    _this.renderKey = function (text, index) {
      var prefixCls = _this.props.prefixCls;
      var keyCls = classnames("".concat(prefixCls, "__item"), _defineProperty({}, "".concat(prefixCls, "__item--disabled"), text.length === 0));
      return /*#__PURE__*/React.createElement("div", {
        className: keyCls,
        key: +index,
        onClick: function onClick() {
          return _this.onKeyClick(text);
        }
      }, text === 'close' ? /*#__PURE__*/React.createElement(KeyboardIcon, {
        size: "lg"
      }) : text);
    };

    return _this;
  }

  _createClass(Keyboard, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          prefixCls = _this$props.prefixCls,
          className = _this$props.className,
          locale = _this$props.locale;
      var cls = classnames(prefixCls, className);
      return /*#__PURE__*/React.createElement("div", {
        className: cls
      }, /*#__PURE__*/React.createElement("div", {
        className: "".concat(prefixCls, "__keys")
      }, this.getKeys().map(this.renderKey)), /*#__PURE__*/React.createElement("div", {
        className: "".concat(prefixCls, "__handle")
      }, /*#__PURE__*/React.createElement("div", {
        className: "".concat(prefixCls, "__item"),
        onTouchStart: function onTouchStart() {
          return _this2.onTouchLongPressIn('delete');
        },
        onTouchEnd: this.onTouchLongPressOut,
        onTouchCancel: this.onTouchLongPressOut,
        onMouseDown: function onMouseDown() {
          return _this2.onMouseLongPressIn('delete');
        },
        onMouseUp: this.onMouseLongPressOut
      }, /*#__PURE__*/React.createElement(DeleteKeyIcon, {
        size: "lg"
      })), /*#__PURE__*/React.createElement("div", {
        className: "".concat(prefixCls, "__item ").concat(prefixCls, "__item--ok"),
        onClick: function onClick() {
          return _this2.onKeyClick('ok');
        }
      }, locale.okText)));
    }
  }]);

  return Keyboard;
}(PureComponent);

Keyboard.defaultProps = {
  prefixCls: 'za-keyboard',
  type: 'number'
};
export { Keyboard as default };