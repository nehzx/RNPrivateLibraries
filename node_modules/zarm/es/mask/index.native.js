import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { PureComponent } from 'react';
import { StyleSheet, View, TouchableWithoutFeedback } from 'react-native';
import maskStyle from './style/index.native';
var maskStyles = StyleSheet.create(maskStyle);

var Mask = /*#__PURE__*/function (_PureComponent) {
  _inherits(Mask, _PureComponent);

  var _super = _createSuper(Mask);

  function Mask() {
    _classCallCheck(this, Mask);

    return _super.apply(this, arguments);
  }

  _createClass(Mask, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          visible = _this$props.visible,
          styles = _this$props.styles,
          type = _this$props.type,
          style = _this$props.style,
          onClick = _this$props.onClick;
      var popupCls = [styles.wrapperStyle, styles["".concat(type, "Wrapper")], style];
      return visible && /*#__PURE__*/React.createElement(TouchableWithoutFeedback, {
        onPress: onClick
      }, /*#__PURE__*/React.createElement(View, {
        style: [popupCls]
      }));
    }
  }]);

  return Mask;
}(PureComponent);

Mask.defaultProps = {
  visible: false,
  type: 'normal',
  styles: maskStyles
};
export { Mask as default };