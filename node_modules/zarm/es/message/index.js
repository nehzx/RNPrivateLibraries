import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { PureComponent } from 'react';
import classnames from 'classnames';
import { Close as CloseIcon, ArrowRight as ArrowRightIcon } from '@zarm-design/icons';

var Message = /*#__PURE__*/function (_PureComponent) {
  _inherits(Message, _PureComponent);

  var _super = _createSuper(Message);

  function Message(props) {
    var _this;

    _classCallCheck(this, Message);

    _this = _super.call(this, props);

    _this.onClick = function (e) {
      var _this$props = _this.props,
          hasArrow = _this$props.hasArrow,
          onClick = _this$props.onClick;

      if (hasArrow && typeof onClick === 'function') {
        onClick(e);
      }
    };

    _this.onClose = function () {
      _this.setState({
        visible: false
      });
    };

    _this.state = {
      visible: true
    };
    return _this;
  }

  _createClass(Message, [{
    key: "render",
    value: function render() {
      var _classnames;

      var _this$props2 = this.props,
          prefixCls = _this$props2.prefixCls,
          className = _this$props2.className,
          theme = _this$props2.theme,
          size = _this$props2.size,
          icon = _this$props2.icon,
          hasArrow = _this$props2.hasArrow,
          closable = _this$props2.closable,
          children = _this$props2.children;
      var visible = this.state.visible;
      var classes = classnames(prefixCls, className, (_classnames = {}, _defineProperty(_classnames, "".concat(prefixCls, "--").concat(theme), !!theme), _defineProperty(_classnames, "".concat(prefixCls, "--").concat(size), !!size), _defineProperty(_classnames, "".concat(prefixCls, "--link"), !!hasArrow), _classnames));
      var iconRender = icon && /*#__PURE__*/React.createElement("div", {
        className: "".concat(prefixCls, "__icon")
      }, icon);
      var renderCloseIcon = closable && /*#__PURE__*/React.createElement(CloseIcon, {
        onClick: this.onClose
      });
      var renderArrow = hasArrow && /*#__PURE__*/React.createElement(ArrowRightIcon, null);
      var noFooter = !closable && !hasArrow;
      return visible && /*#__PURE__*/React.createElement("div", {
        className: classes,
        onClick: this.onClick
      }, /*#__PURE__*/React.createElement("div", {
        className: "".concat(prefixCls, "__header")
      }, iconRender), /*#__PURE__*/React.createElement("div", {
        className: "".concat(prefixCls, "__body")
      }, children), !noFooter && /*#__PURE__*/React.createElement("div", {
        className: "".concat(prefixCls, "__footer")
      }, renderArrow, renderCloseIcon));
    }
  }]);

  return Message;
}(PureComponent);

Message.defaultProps = {
  prefixCls: 'za-message',
  theme: 'primary',
  hasArrow: false,
  closable: false
};
export { Message as default };