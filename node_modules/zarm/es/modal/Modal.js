import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { Component } from 'react';
import classnames from 'classnames';
import Popup from '../popup';
import ModalHeader from './ModalHeader';
import ModalBody from './ModalBody';
import ModalFooter from './ModalFooter';

var Modal = /*#__PURE__*/function (_Component) {
  _inherits(Modal, _Component);

  var _super = _createSuper(Modal);

  function Modal() {
    _classCallCheck(this, Modal);

    return _super.apply(this, arguments);
  }

  _createClass(Modal, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          prefixCls = _this$props.prefixCls,
          className = _this$props.className,
          shape = _this$props.shape,
          children = _this$props.children,
          maskClosable = _this$props.maskClosable,
          title = _this$props.title,
          closable = _this$props.closable,
          footer = _this$props.footer,
          onCancel = _this$props.onCancel,
          others = _objectWithoutProperties(_this$props, ["prefixCls", "className", "shape", "children", "maskClosable", "title", "closable", "footer", "onCancel"]);

      var cls = {
        modal: classnames(prefixCls, className, _defineProperty({}, "".concat(prefixCls, "--").concat(shape), !!shape)),
        dialog: classnames("".concat(prefixCls, "__dialog"))
      };
      var showHeader = title || closable;

      var noop = function noop() {};

      return /*#__PURE__*/React.createElement(Popup, _extends({
        className: cls.modal,
        direction: "center",
        onMaskClick: maskClosable ? onCancel : noop
      }, others), /*#__PURE__*/React.createElement("div", {
        className: cls.dialog
      }, showHeader && /*#__PURE__*/React.createElement(ModalHeader, {
        title: title,
        closable: closable,
        onCancel: onCancel
      }), /*#__PURE__*/React.createElement(ModalBody, null, children), footer && /*#__PURE__*/React.createElement(ModalFooter, null, footer)));
    }
  }]);

  return Modal;
}(Component);

Modal.alert = void 0;
Modal.confirm = void 0;
Modal.defaultProps = {
  prefixCls: 'za-modal',
  visible: false,
  animationType: 'fade',
  animationDuration: 200,
  width: '70%',
  mask: true,
  maskType: 'normal',
  shape: 'radius',
  closable: false,
  maskClosable: false,
  destroy: true
};
export { Modal as default };