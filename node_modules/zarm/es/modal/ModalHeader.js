import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { PureComponent } from 'react';
import classnames from 'classnames';
import { Close as CloseIcon } from '@zarm-design/icons';

var ModalHeader = /*#__PURE__*/function (_PureComponent) {
  _inherits(ModalHeader, _PureComponent);

  var _super = _createSuper(ModalHeader);

  function ModalHeader() {
    _classCallCheck(this, ModalHeader);

    return _super.apply(this, arguments);
  }

  _createClass(ModalHeader, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          prefixCls = _this$props.prefixCls,
          className = _this$props.className,
          title = _this$props.title,
          closable = _this$props.closable,
          onCancel = _this$props.onCancel,
          others = _objectWithoutProperties(_this$props, ["prefixCls", "className", "title", "closable", "onCancel"]);

      var cls = classnames("".concat(prefixCls, "__header"), className);
      var btnClose = closable && /*#__PURE__*/React.createElement(CloseIcon, {
        size: "sm",
        className: "".concat(prefixCls, "__header__close"),
        onClick: onCancel
      });
      return /*#__PURE__*/React.createElement("div", _extends({
        className: cls
      }, others), /*#__PURE__*/React.createElement("div", {
        className: "".concat(prefixCls, "__header__title")
      }, title), btnClose);
    }
  }]);

  return ModalHeader;
}(PureComponent);

ModalHeader.defaultProps = {
  prefixCls: 'za-modal'
};
export { ModalHeader as default };