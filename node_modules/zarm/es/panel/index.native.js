import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { PureComponent } from 'react';
import { StyleSheet, View } from 'react-native';
import panelStyle from './style/index.native';
import { RenderWithText } from '../utils/renderWithText.native';
var panelStyles = StyleSheet.create(panelStyle);

var Panel = /*#__PURE__*/function (_PureComponent) {
  _inherits(Panel, _PureComponent);

  var _super = _createSuper(Panel);

  function Panel() {
    _classCallCheck(this, Panel);

    return _super.apply(this, arguments);
  }

  _createClass(Panel, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          title = _this$props.title,
          more = _this$props.more,
          style = _this$props.style,
          styles = _this$props.styles,
          children = _this$props.children;
      var wrapperStyle = [styles.container, style];
      var headerStyle = [styles.panelHeader];
      var bodyStyle = [styles.panelBody];
      return /*#__PURE__*/React.createElement(View, {
        style: wrapperStyle
      }, /*#__PURE__*/React.createElement(View, {
        style: headerStyle
      }, /*#__PURE__*/React.createElement(RenderWithText, {
        component: title,
        viewStyle: panelStyles.panelHeaderTitle,
        textStyle: panelStyles.panelHeaderTitleText
      }), /*#__PURE__*/React.createElement(RenderWithText, {
        component: more,
        viewStyle: panelStyles.panelHeaderMore,
        textStyle: panelStyles.panelHeaderMoreText
      })), /*#__PURE__*/React.createElement(View, {
        style: bodyStyle
      }, children));
    }
  }]);

  return Panel;
}(PureComponent);

Panel.defaultProps = {
  styles: panelStyles
};
export { Panel as default };