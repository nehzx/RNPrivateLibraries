import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React from 'react';
import { render, mount, shallow } from 'enzyme';
import toJson from 'enzyme-to-json';
import RadioGroup from '../RadioGroup';
import Radio from '../index';

var TestRadio = /*#__PURE__*/function (_React$Component) {
  _inherits(TestRadio, _React$Component);

  var _super = _createSuper(TestRadio);

  function TestRadio() {
    _classCallCheck(this, TestRadio);

    return _super.apply(this, arguments);
  }

  _createClass(TestRadio, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/React.createElement("input", this.props);
    }
  }]);

  return TestRadio;
}(React.Component);

describe('Radio', function () {
  it('renders correctly', function () {
    var wrapper = render( /*#__PURE__*/React.createElement(Radio, {
      value: "0"
    }, "\u9009\u9879\u4E00"));
    expect(toJson(wrapper)).toMatchSnapshot();
  });
  it('defaultChecked', function () {
    var wrapper = render( /*#__PURE__*/React.createElement(Radio, {
      defaultChecked: true,
      value: "0"
    }, "\u9009\u9879\u4E00"));
    expect(toJson(wrapper)).toMatchSnapshot();
  });
  it('type is button', function () {
    var wrapper = render( /*#__PURE__*/React.createElement(Radio, {
      type: "button",
      value: "0"
    }, "\u9009\u9879\u4E00"));
    expect(toJson(wrapper)).toMatchSnapshot();
  });
  it('type is cell', function () {
    var wrapper = render( /*#__PURE__*/React.createElement(Radio, {
      type: "cell",
      value: "0"
    }, "\u9009\u9879\u4E00"));
    expect(toJson(wrapper)).toMatchSnapshot();
  });
  it('receive new checked', function () {
    var onChange = jest.fn();
    var wrapper = shallow( /*#__PURE__*/React.createElement(Radio, {
      value: "0",
      onChange: onChange
    }, "\u9009\u9879\u4E00"));
    wrapper.setProps({
      checked: true
    });
    wrapper.find('input[type="radio"]').simulate('change');
    expect(onChange).toBeCalled();
  });
  it('disabled', function () {
    var onChange = jest.fn();
    var wrapper = shallow( /*#__PURE__*/React.createElement(Radio, {
      value: "0",
      onChange: onChange
    }, "\u9009\u9879\u4E00"));
    wrapper.setProps({
      disabled: true
    });
    wrapper.find('input[type="radio"]').simulate('change');
  });
});
describe('Radio.Group', function () {
  describe('#getDerivedStateFromProps', function () {
    it('should get derived state from props correctly', function () {
      var props = {
        value: 1
      };
      var state = RadioGroup.getDerivedStateFromProps(props);
      expect(state).toEqual({
        value: 1
      });
    });
    it('should return null if  value field not in props', function () {
      var props = {};
      var state = RadioGroup.getDerivedStateFromProps(props);
      expect(state).toBeNull();
    });
  });
  describe('#getValue', function () {
    it('should get initial state from props correctly if props has value field', function () {
      var wrapper = shallow( /*#__PURE__*/React.createElement(RadioGroup, {
        value: 1
      }));
      expect(wrapper.state()).toEqual({
        value: 1
      });
    });
    it('should get initial state from props correctly if props has defaultValue field', function () {
      var wrapper = shallow( /*#__PURE__*/React.createElement(RadioGroup, {
        defaultValue: 1
      }));
      expect(wrapper.state()).toEqual({
        value: 1
      });
    });
    it('should get null', function () {
      var wrapper = shallow( /*#__PURE__*/React.createElement(RadioGroup, null));
      expect(wrapper.state()).toEqual({
        value: null
      });
    });
  });
  describe('#getChildChecked', function () {
    it('should get initial state from props correctly if component has single child', function () {
      var wrapper = shallow( /*#__PURE__*/React.createElement(RadioGroup, null, /*#__PURE__*/React.createElement(TestRadio, {
        checked: true,
        value: 233
      })));
      expect(wrapper.state()).toEqual({
        value: 233
      });
    });
    it('should get initial state from props correctly if component has children', function () {
      var wrapper = shallow( /*#__PURE__*/React.createElement(RadioGroup, null, /*#__PURE__*/React.createElement(TestRadio, {
        checked: true,
        value: 233
      }), /*#__PURE__*/React.createElement(TestRadio, {
        checked: true,
        value: 222
      })));
      expect(wrapper.state()).toEqual({
        value: 222
      });
    });
    it('should get initial state from props correctly if component has invalid React element child', function () {
      var wrapper = shallow( /*#__PURE__*/React.createElement(RadioGroup, null, /*#__PURE__*/React.createElement(TestRadio, {
        checked: false,
        value: 110
      })));
      expect(wrapper.state()).toEqual({
        value: null
      });
    });
  });
  it('should render with children', function () {
    var wrapper = shallow( /*#__PURE__*/React.createElement(RadioGroup, {
      id: "test-radio-group"
    }, /*#__PURE__*/React.createElement(TestRadio, {
      value: 1,
      checked: false
    }), /*#__PURE__*/React.createElement(TestRadio, {
      value: 2,
      checked: false
    })));
    expect(wrapper.find('.za-radio-group__inner').children()).toHaveLength(2);
    expect(wrapper.prop('id')).toEqual('test-radio-group');
  });
  it('should render with cloned react element correctly', function () {
    var wrapper = shallow( /*#__PURE__*/React.createElement(RadioGroup, {
      id: "test-radio-group",
      type: "button"
    }, /*#__PURE__*/React.createElement(TestRadio, {
      value: 1
    }), /*#__PURE__*/React.createElement(TestRadio, {
      value: 2
    })));
    expect(wrapper.find(TestRadio).at(0).props()).toEqual({
      value: 1,
      checked: false,
      type: 'button',
      shape: 'radius',
      disabled: false,
      onChange: expect.any(Function)
    });
    expect(wrapper.find(TestRadio).at(1).props()).toEqual({
      value: 2,
      checked: false,
      type: 'button',
      shape: 'radius',
      disabled: false,
      onChange: expect.any(Function)
    });
  });
  it('should handle onChange event on radio group component', function () {
    var onChange = jest.fn();
    var wrapper = mount( /*#__PURE__*/React.createElement(RadioGroup, {
      id: "test-radio-group",
      onChange: onChange
    }, /*#__PURE__*/React.createElement(TestRadio, {
      value: 1,
      checked: false
    }), /*#__PURE__*/React.createElement(TestRadio, {
      value: 2,
      checked: false
    })));
    expect(wrapper.state('value')).toBeNull();
    var input = wrapper.find('.za-radio-group__inner').children().at(0).find('input');
    expect(input.props()).toEqual(expect.objectContaining({
      value: 1,
      checked: false,
      type: undefined,
      shape: 'radius',
      disabled: false,
      onChange: expect.any(Function)
    }));
    input.simulate('change');
    expect(onChange).toBeCalledWith(1);
    expect(wrapper.state('value')).toEqual(1);
  });
  it('should handle onChange event on the children', function () {
    var onChange1 = jest.fn();
    var onChange2 = jest.fn();
    var wrapper = mount( /*#__PURE__*/React.createElement(RadioGroup, {
      id: "test-radio-group"
    }, /*#__PURE__*/React.createElement(TestRadio, {
      value: 1,
      checked: false,
      onChange: onChange1
    }), /*#__PURE__*/React.createElement(TestRadio, {
      value: 2,
      checked: false,
      onChange: onChange2
    })));
    expect(wrapper.state('value')).toBeNull();
    var input = wrapper.find('.za-radio-group__inner').children().at(0).find('input');
    expect(input.props()).toEqual({
      value: 1,
      checked: false,
      type: undefined,
      shape: 'radius',
      disabled: false,
      onChange: expect.any(Function)
    });
    input.simulate('change');
    expect(onChange1).toBeCalledTimes(1);
    expect(onChange2).not.toBeCalled();
    expect(wrapper.state('value')).toEqual(1);
  });
  it('renders correctly', function () {
    var wrapper = render( /*#__PURE__*/React.createElement(Radio.Group, {
      value: "0",
      onChange: jest.fn()
    }, /*#__PURE__*/React.createElement(Radio, {
      value: "0"
    }, "\u9009\u9879\u4E00"), /*#__PURE__*/React.createElement(Radio, {
      value: "1"
    }, "\u9009\u9879\u4E8C"), /*#__PURE__*/React.createElement(Radio, {
      value: "2"
    }, "\u9009\u9879\u4E09")));
    expect(toJson(wrapper)).toMatchSnapshot();
  });
  it('receive new value', function () {
    var wrapper = shallow( /*#__PURE__*/React.createElement(Radio.Group, {
      value: "0",
      onChange: jest.fn()
    }, /*#__PURE__*/React.createElement(Radio, {
      value: "0"
    }, "\u9009\u9879\u4E00"), /*#__PURE__*/React.createElement(Radio, {
      value: "1"
    }, "\u9009\u9879\u4E8C"), /*#__PURE__*/React.createElement(Radio, {
      value: "2"
    }, "\u9009\u9879\u4E09")));
    wrapper.setProps({
      value: '1'
    });
  });
  it('defaultValue', function () {
    var wrapper = render( /*#__PURE__*/React.createElement(Radio.Group, {
      defaultValue: "1"
    }, /*#__PURE__*/React.createElement(Radio, {
      value: "0"
    }, "\u9009\u9879\u4E00"), /*#__PURE__*/React.createElement(Radio, {
      value: "1"
    }, "\u9009\u9879\u4E8C"), /*#__PURE__*/React.createElement(Radio, {
      value: "2"
    }, "\u9009\u9879\u4E09")));
    expect(toJson(wrapper)).toMatchSnapshot();
  });
  it('Radio checked', function () {
    var wrapper = render( /*#__PURE__*/React.createElement(Radio.Group, null, /*#__PURE__*/React.createElement(Radio, {
      value: "0"
    }, "\u9009\u9879\u4E00"), /*#__PURE__*/React.createElement(Radio, {
      value: "1",
      checked: true
    }, "\u9009\u9879\u4E8C"), /*#__PURE__*/React.createElement(Radio, {
      value: "2"
    }, "\u9009\u9879\u4E09")));
    expect(toJson(wrapper)).toMatchSnapshot();
  }); // 圆角

  it('shape is radius', function () {
    var wrapper = shallow( /*#__PURE__*/React.createElement(Radio.Group, {
      shape: "radius"
    }, /*#__PURE__*/React.createElement(Radio, {
      value: "0"
    }, "\u9009\u9879\u4E00"), /*#__PURE__*/React.createElement(Radio, {
      value: "1"
    }, "\u9009\u9879\u4E8C"), /*#__PURE__*/React.createElement(Radio, {
      value: "2"
    }, "\u9009\u9879\u4E09")));
    expect(wrapper.find('.za-radio-group').hasClass('za-radio-group--radius')).toBe(true);
  }); // 椭圆角

  it('shape is round', function () {
    var wrapper = shallow( /*#__PURE__*/React.createElement(Radio.Group, {
      shape: "round"
    }, /*#__PURE__*/React.createElement(Radio, {
      value: "0"
    }, "\u9009\u9879\u4E00"), /*#__PURE__*/React.createElement(Radio, {
      value: "1"
    }, "\u9009\u9879\u4E8C"), /*#__PURE__*/React.createElement(Radio, {
      value: "2"
    }, "\u9009\u9879\u4E09")));
    expect(wrapper.find('.za-radio-group').hasClass('za-radio-group--round')).toBe(true);
  }); // 块级样式

  it('block', function () {
    var wrapper = shallow( /*#__PURE__*/React.createElement(Radio.Group, {
      block: true
    }, /*#__PURE__*/React.createElement(Radio, {
      value: "0"
    }, "\u9009\u9879\u4E00"), /*#__PURE__*/React.createElement(Radio, {
      value: "1"
    }, "\u9009\u9879\u4E8C"), /*#__PURE__*/React.createElement(Radio, {
      value: "2"
    }, "\u9009\u9879\u4E09")));
    expect(wrapper.find('.za-radio-group').hasClass('za-radio-group--block')).toBe(true);
  }); // 列表样式

  it('type is cell', function () {
    var wrapper = shallow( /*#__PURE__*/React.createElement(Radio.Group, {
      type: "cell"
    }, /*#__PURE__*/React.createElement(Radio, {
      value: "0"
    }, "\u9009\u9879\u4E00"), /*#__PURE__*/React.createElement(Radio, {
      value: "1"
    }, "\u9009\u9879\u4E8C"), /*#__PURE__*/React.createElement(Radio, {
      value: "2",
      disabled: true
    }, "\u9009\u9879\u4E09")));
    expect(wrapper.find('.za-radio-group').hasClass('za-radio-group--cell')).toBe(true);
  });
  it('radio group onChange event', function () {
    var onChange = jest.fn();
    var wrapper = shallow( /*#__PURE__*/React.createElement(Radio.Group, {
      shape: "round",
      onChange: onChange
    }, /*#__PURE__*/React.createElement(Radio, {
      value: "0"
    }, "\u9009\u9879\u4E00"), /*#__PURE__*/React.createElement(Radio, {
      value: "1"
    }, "\u9009\u9879\u4E8C"), /*#__PURE__*/React.createElement(Radio, {
      value: "2",
      disabled: true
    }, "\u9009\u9879\u4E09")));
    var firstCheckbox = wrapper.find(Radio).first().dive().find('input[type="radio"]');
    firstCheckbox.simulate('change', {
      target: {
        checked: true
      }
    });
    expect(onChange).toBeCalledWith('0');
  });
});