import React from 'react';
import { mount } from 'enzyme';
import toJson from 'enzyme-to-json';
import StackPicker from '../index';
jest.useFakeTimers();
var District = [{
  value: '340000',
  label: '安徽省',
  children: [{
    value: '340800',
    label: '安庆市',
    children: [{
      value: '340803',
      label: '大观区',
      children: []
    }, {
      value: '340822',
      label: '怀宁县',
      children: []
    }, {
      value: '340882',
      label: '其它区',
      children: []
    }]
  }]
}, {
  value: '310000',
  label: '上海',
  children: [{
    value: '310100',
    label: '上海市',
    children: [{
      value: '310113',
      label: '宝山区',
      children: []
    }, {
      value: '310105',
      label: '长宁区',
      children: []
    }, {
      value: '310230',
      label: '崇明县',
      children: []
    }, {
      value: '310152',
      label: '川沙区',
      children: []
    }]
  }]
}];
describe('StackPicker', function () {
  it('renders correctly', function () {
    var onChange = jest.fn();
    var wrapper = mount( /*#__PURE__*/React.createElement(StackPicker, {
      defaultValue: [],
      value: [],
      cancelText: "\u53D6\u6D88",
      okText: "\u786E\u5B9A",
      visible: true,
      valueMember: "value",
      itemRender: function itemRender(data) {
        return data.label;
      },
      dataSource: District,
      onChange: onChange
    }));
    expect(toJson(wrapper)).toMatchSnapshot();
  });
  it('handle props click', function () {
    var onCancel = jest.fn();
    var onOk = jest.fn();
    var wrapper = mount( /*#__PURE__*/React.createElement(StackPicker, {
      defaultValue: [],
      cancelText: "\u53D6\u6D88",
      okText: "\u786E\u5B9A",
      maskClosable: true,
      value: ['340000', '340800', '340803'],
      dataSource: District,
      onCancel: onCancel,
      onOk: onOk
    }));
    wrapper.setProps({
      visible: true
    });
    wrapper.update();
    wrapper.find('.za-stack-picker__submit').simulate('click');
    expect(onOk).toHaveBeenCalledWith(['340000', '340800', '340803']);
    wrapper.find('.za-stack-picker__cancel').simulate('click');
    expect(onCancel).toBeCalled();
    wrapper.find('.za-mask').simulate('click');
    expect(onCancel).toBeCalled();
  });
  it('handle onChange', function () {
    var onChange = jest.fn();
    var wrapper = mount( /*#__PURE__*/React.createElement(StackPicker, {
      defaultValue: [],
      value: [],
      cancelText: "\u53D6\u6D88",
      okText: "\u786E\u5B9A",
      visible: true,
      dataSource: District,
      onChange: onChange
    })); // popupWrapper = mount(wrapper.instance().getComponent());

    wrapper.find('.za-stack-picker__group').at(0).find('.za-stack-picker__stack-column').at(0).simulate('click');
    wrapper.find('.za-stack-picker__group').at(0).find('.za-stack-picker__stack-column-wrapper').at(0).simulate('click');
    wrapper.find('.za-stack-picker__group').at(0).find('.za-stack-picker__stack-column-wrapper').at(0).find('.za-stack-picker__stack-column-item').at(0).simulate('click');
    expect(onChange).toHaveBeenCalledWith(['340000']);
  });
  it('handle onChangeValidate', function () {
    var onChange = jest.fn();
    var onChangeValidate = jest.fn(function () {
      return 'error';
    });
    var wrapper = mount( /*#__PURE__*/React.createElement(StackPicker, {
      defaultValue: [],
      value: [],
      cancelText: "\u53D6\u6D88",
      okText: "\u786E\u5B9A",
      visible: true,
      dataSource: District,
      onChange: onChange,
      onChangeValidate: onChangeValidate
    })); // popupWrapper = mount(wrapper.instance().getComponent());

    wrapper.find('.za-stack-picker__group').at(0).find('.za-stack-picker__stack-column-wrapper').at(0).find('.za-stack-picker__stack-column-item').at(0).simulate('click'); // 目前不能取到 useState 的值

    expect(onChange).toHaveBeenCalledWith(['340000']);
  });
}); // describe('StackPicker props disabled', () => {
//   let wrapper;
//   const setState = jest.fn();
//   const useStateSpy = jest.spyOn(React, 'useState');
//   useStateSpy.mockImplementation((init) => [init, setState]);
//
//   const onCancel = jest.fn();
//   const onOk = jest.fn();
//
//   beforeEach(() => {
//     wrapper = shallow(
//       <StackPicker
//         visible
//         disabled
//         dataSource={District}
//         onCancel={onCancel}
//         onOk={onOk}
//       />,
//     );
//   });
//
//   it('handle props disabled', () => {
//     wrapper.find('.za-stack-picker__cancel').simulate('click');
//     // 目前不能取到 useState 的值
//     expect(onCancel).toBeCalled();
//   });
// });

describe('StackPicker error type', function () {
  var consoleSpy = jest.spyOn(console, 'error').mockImplementation(function () {});
  afterAll(function () {
    consoleSpy.mockRestore();
  });
  it('handle props error type', function () {
    var onCancel = 1;
    var onOk = 1;
    var displayRender = 1;
    var onChangeValidate = 1;
    var onChange = 1;
    var wrapper = mount( /*#__PURE__*/React.createElement(StackPicker, {
      defaultValue: [],
      value: [],
      cancelText: "\u53D6\u6D88",
      okText: "\u786E\u5B9A",
      dataSource: District,
      onCancel: onCancel,
      onOk: onOk,
      displayRender: displayRender,
      onChange: onChange,
      onChangeValidate: onChangeValidate
    }));
    wrapper.setProps({
      visible: true
    });
    wrapper.update();
    expect(consoleSpy).toHaveBeenCalledWith('displayRender need a function');
    wrapper.find('.za-stack-picker__cancel').simulate('click');
    expect(consoleSpy).toHaveBeenCalledWith('onCancel need a function');
    wrapper.find('.za-stack-picker__submit').simulate('click');
    expect(consoleSpy).toHaveBeenCalledWith('onOk need a function');
    wrapper.find('.za-stack-picker__group').at(0).find('.za-stack-picker__stack-column-wrapper').at(0).find('.za-stack-picker__stack-column-item').at(0).simulate('click');
    expect(consoleSpy).toHaveBeenCalledWith('onChangeValidate need a function');
    expect(consoleSpy).toHaveBeenCalledWith('onChange need a function');
    consoleSpy.mockRestore();
  });
});