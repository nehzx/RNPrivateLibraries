"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _index = _interopRequireDefault(require("./style/index.native"));

var _index2 = _interopRequireDefault(require("../popup/index.native"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var actionsheetStyles = _reactNative.StyleSheet.create(_index.default);

var ActionSheet = /*#__PURE__*/function (_PureComponent) {
  (0, _inherits2.default)(ActionSheet, _PureComponent);

  var _super = _createSuper(ActionSheet);

  function ActionSheet() {
    var _this;

    (0, _classCallCheck2.default)(this, ActionSheet);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = {
      isActive: false,
      activeIndex: null
    };

    _this.onPressIn = function (activeIndex) {
      _this.setState({
        isActive: true,
        activeIndex: activeIndex
      });
    };

    _this.onPressOut = function (activeIndex) {
      _this.setState({
        isActive: false,
        activeIndex: activeIndex
      });
    };

    _this.renderActions = function (action, index) {
      var styles = _this.props.styles;
      var _this$state = _this.state,
          isActive = _this$state.isActive,
          activeIndex = _this$state.activeIndex;
      var actionMaskStyle = [// index !== 0 && styles!.actionItemBorder,
      styles.actionItemMask, activeIndex === index && isActive && styles.actionItemActive];
      var actionStyle = [styles.actionItem, !!action.theme && styles["theme-".concat(action.theme)]];
      return /*#__PURE__*/_react.default.createElement(_reactNative.TouchableOpacity, {
        key: +index,
        activeOpacity: 1,
        onPress: action.onClick,
        onPressIn: function onPressIn() {
          return _this.onPressIn(index);
        },
        onPressOut: function onPressOut() {
          return _this.onPressOut(index);
        }
      }, /*#__PURE__*/_react.default.createElement(_reactNative.View, {
        style: actionMaskStyle
      }), index !== 0 ? /*#__PURE__*/_react.default.createElement(_reactNative.View, {
        style: styles.actionItemBorder
      }) : null, /*#__PURE__*/_react.default.createElement(_reactNative.Text, {
        style: actionStyle
      }, action.text));
    };

    _this.renderCancel = function () {
      var _this$props = _this.props,
          styles = _this$props.styles,
          onCancel = _this$props.onCancel,
          cancelText = _this$props.cancelText;
      var _this$state2 = _this.state,
          isActive = _this$state2.isActive,
          activeIndex = _this$state2.activeIndex;
      var cancelWrapperStyle = [styles.wrapperCacnel];
      var cancelMaskStyle = [styles.actionItemMask, isActive && activeIndex === 'cancel' && styles.actionItemActive];
      var cancelStyle = [styles.actionCancelItem];
      return typeof onCancel === 'function' && /*#__PURE__*/_react.default.createElement(_reactNative.TouchableOpacity, {
        style: cancelWrapperStyle,
        activeOpacity: 1,
        onPress: onCancel,
        onPressIn: function onPressIn() {
          return _this.onPressIn('cancel');
        },
        onPressOut: function onPressOut() {
          return _this.onPressOut('cancel');
        }
      }, /*#__PURE__*/_react.default.createElement(_reactNative.View, {
        style: cancelMaskStyle
      }), /*#__PURE__*/_react.default.createElement(_reactNative.Text, {
        style: cancelStyle
      }, cancelText));
    };

    return _this;
  }

  (0, _createClass2.default)(ActionSheet, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          style = _this$props2.style,
          styles = _this$props2.styles,
          spacing = _this$props2.spacing,
          visible = _this$props2.visible,
          onMaskClick = _this$props2.onMaskClick,
          actions = _this$props2.actions;
      var wrapperStyle = [styles.wrapper, spacing && styles.wrapperSpacing, style];
      var actionsStyle = [styles.wrapperActions, {
        margin: 0
      }];
      return /*#__PURE__*/_react.default.createElement(_index2.default, {
        visible: visible,
        onMaskClick: onMaskClick
      }, /*#__PURE__*/_react.default.createElement(_reactNative.View, {
        style: wrapperStyle
      }, /*#__PURE__*/_react.default.createElement(_reactNative.View, {
        style: actionsStyle
      }, actions.map(this.renderActions)), this.renderCancel()));
    }
  }]);
  return ActionSheet;
}(_react.PureComponent);

exports.default = ActionSheet;
ActionSheet.defaultProps = {
  visible: false,
  spacing: false,
  actions: [],
  cancelText: '取消',
  styles: actionsheetStyles
};