"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _classnames2 = _interopRequireDefault(require("classnames"));

var _activityIndicator = _interopRequireDefault(require("../activity-indicator"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var Button = /*#__PURE__*/function (_PureComponent) {
  (0, _inherits2.default)(Button, _PureComponent);

  var _super = _createSuper(Button);

  function Button() {
    var _this;

    (0, _classCallCheck2.default)(this, Button);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _this.onClick = function (e) {
      var _this$props = _this.props,
          disabled = _this$props.disabled,
          onClick = _this$props.onClick;

      if (disabled) {
        return;
      }

      if (typeof onClick === 'function') {
        onClick(e);
      }
    };

    return _this;
  }

  (0, _createClass2.default)(Button, [{
    key: "render",
    value: function render() {
      var _classnames;

      var _this$props2 = this.props,
          prefixCls = _this$props2.prefixCls,
          className = _this$props2.className,
          theme = _this$props2.theme,
          size = _this$props2.size,
          shape = _this$props2.shape,
          icon = _this$props2.icon,
          block = _this$props2.block,
          ghost = _this$props2.ghost,
          shadow = _this$props2.shadow,
          disabled = _this$props2.disabled,
          loading = _this$props2.loading,
          onClick = _this$props2.onClick,
          children = _this$props2.children,
          rest = (0, _objectWithoutProperties2.default)(_this$props2, ["prefixCls", "className", "theme", "size", "shape", "icon", "block", "ghost", "shadow", "disabled", "loading", "onClick", "children"]);
      var cls = (0, _classnames2.default)(prefixCls, className, (_classnames = {}, (0, _defineProperty2.default)(_classnames, "".concat(prefixCls, "--").concat(theme), !!theme), (0, _defineProperty2.default)(_classnames, "".concat(prefixCls, "--").concat(size), !!size), (0, _defineProperty2.default)(_classnames, "".concat(prefixCls, "--").concat(shape), !!shape), (0, _defineProperty2.default)(_classnames, "".concat(prefixCls, "--block"), !!block), (0, _defineProperty2.default)(_classnames, "".concat(prefixCls, "--ghost"), !!ghost), (0, _defineProperty2.default)(_classnames, "".concat(prefixCls, "--shadow"), !!shadow), (0, _defineProperty2.default)(_classnames, "".concat(prefixCls, "--disabled"), !!disabled), (0, _defineProperty2.default)(_classnames, "".concat(prefixCls, "--loading"), loading), _classnames));
      var iconRender = loading ? /*#__PURE__*/_react.default.createElement(_activityIndicator.default, null) : icon;

      var childrenRender = children && /*#__PURE__*/_react.default.createElement("span", null, children);

      var contentRender = !!icon || loading ? /*#__PURE__*/_react.default.createElement("div", {
        className: "".concat(prefixCls, "__content")
      }, iconRender, childrenRender) : childrenRender;

      if (rest.href !== undefined) {
        var _htmlType = rest.htmlType,
            _filteredRest = (0, _objectWithoutProperties2.default)(rest, ["htmlType"]);

        var _ref = _filteredRest,
            _mimeType = _ref.mimeType,
            anchorRest = (0, _objectWithoutProperties2.default)(_ref, ["mimeType"]);
        cls = (0, _classnames2.default)(cls, "".concat(prefixCls, "--link"));
        return /*#__PURE__*/_react.default.createElement("a", (0, _extends2.default)({}, anchorRest, {
          type: _mimeType,
          "aria-disabled": disabled,
          className: cls,
          onClick: this.onClick
        }), contentRender);
      }

      var mimeType = rest.mimeType,
          target = rest.target,
          filteredRest = (0, _objectWithoutProperties2.default)(rest, ["mimeType", "target"]);
      var _ref2 = filteredRest,
          htmlType = _ref2.htmlType,
          nativeRest = (0, _objectWithoutProperties2.default)(_ref2, ["htmlType"]);
      return /*#__PURE__*/_react.default.createElement("button", (0, _extends2.default)({}, nativeRest, {
        type: htmlType,
        "aria-disabled": disabled,
        className: cls,
        onClick: this.onClick
      }), contentRender);
    }
  }]);
  return Button;
}(_react.PureComponent);

exports.default = Button;
Button.displayName = 'Button';
Button.defaultProps = {
  prefixCls: 'za-button',
  theme: 'default',
  size: 'md',
  shape: 'radius',
  block: false,
  ghost: false,
  shadow: false,
  disabled: false,
  loading: false,
  htmlType: 'button'
};