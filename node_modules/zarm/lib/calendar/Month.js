"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _date = _interopRequireDefault(require("../utils/date"));

var _configReceiver = _interopRequireDefault(require("../config-receiver"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var CalendarMonthView = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(CalendarMonthView, _Component);

  var _super = _createSuper(CalendarMonthView);

  // 上次是否落点在当前月份内
  // 当前月份的dom
  function CalendarMonthView(props) {
    var _this;

    (0, _classCallCheck2.default)(this, CalendarMonthView);
    _this = _super.call(this, props);
    _this.lastIn = false;
    _this.node = void 0;

    _this.anchor = function () {
      if (_this.node && _this.node.scrollIntoViewIfNeeded) {
        _this.node.scrollIntoViewIfNeeded();
      }
    };

    _this.renderDay = function (day, year, month, firstDay) {
      var _className;

      var _this$props = _this.props,
          prefixCls = _this$props.prefixCls,
          dateRender = _this$props.dateRender,
          onDateClick = _this$props.onDateClick;
      var date = new Date(year, month, day);
      var isToday = new Date().getFullYear() === year && new Date().getMonth() === month && new Date().getDate() === day;

      var status = _this.checkStatus(date);

      var txt = date && dateRender && dateRender(date) || '';

      if ((0, _typeof2.default)(txt) === 'object') {
        if (! /*#__PURE__*/(0, _react.isValidElement)(txt)) {
          console.warn('dateRender函数返回数据类型错误，请返回基本数据类型或者reactNode');
          txt = '';
        }
      }

      var className = (_className = {
        d6: (day + firstDay) % 7 === 0,
        d7: (day + firstDay) % 7 === 1
      }, (0, _defineProperty2.default)(_className, "".concat(prefixCls, "__day--disabled"), status.disabled), (0, _defineProperty2.default)(_className, "".concat(prefixCls, "__day--today"), isToday), (0, _defineProperty2.default)(_className, "".concat(prefixCls, "__day--selected"), status.isSelected), (0, _defineProperty2.default)(_className, "".concat(prefixCls, "__day--range"), status.isRange), (0, _defineProperty2.default)(_className, 'range-start', status.rangeStart), (0, _defineProperty2.default)(_className, 'range-end', status.rangeEnd), (0, _defineProperty2.default)(_className, "firstday-".concat(firstDay), day === 1 && firstDay), _className);
      return /*#__PURE__*/_react.default.createElement("li", {
        key: "".concat(year, "-").concat(month, "-").concat(day),
        className: (0, _classnames.default)("".concat(prefixCls, "__day"), className),
        onClick: function onClick() {
          return !status.disabled && date && onDateClick && onDateClick(date);
        }
      }, txt && /*#__PURE__*/_react.default.createElement("div", {
        className: "".concat(prefixCls, "__day__content")
      }, txt) || '');
    };

    _this.renderContent = function (year, month) {
      var data = _date.default.getCurrMonthInfo(year, month);

      var firstDay = data.firstDay,
          dayCount = data.dayCount;
      return Array.from({
        length: dayCount
      }).map(function (_item, i) {
        return _this.renderDay(i + 1, year, month, firstDay);
      });
    };

    _this.state = {
      value: props.value,
      dateMonth: props.dateMonth
    };
    _this.checkStatus = _this.checkStatus.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  (0, _createClass2.default)(CalendarMonthView, [{
    key: "checkStatus",
    value: // 日期状态: 选中，区间
    function checkStatus(date) {
      var _this$props2 = this.props,
          min = _this$props2.min,
          max = _this$props2.max,
          disabledDate = _this$props2.disabledDate;
      var _this$state$value = this.state.value,
          value = _this$state$value === void 0 ? [] : _this$state$value;

      var disabled = date < _date.default.cloneDate(min, 'd', 0) || date > _date.default.cloneDate(max, 'd', 0);

      var res = {
        disabled: disabled || disabledDate && disabledDate(date),
        isSelected: value.some(function (item) {
          return _date.default.isOneDay(date, item);
        }),
        isRange: value.length > 1 && date > value[0] && date < value[value.length - 1],
        rangeStart: value.length > 1 && _date.default.isOneDay(date, value[0]),
        rangeEnd: value.length > 1 && _date.default.isOneDay(date, value[value.length - 1])
      };
      this.lastIn = this.lastIn || res.isSelected || res.isRange;
      return res;
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props3 = this.props,
          prefixCls = _this$props3.prefixCls,
          locale = _this$props3.locale;
      var dateMonth = this.state.dateMonth;
      var year = dateMonth.getFullYear();
      var month = dateMonth.getMonth();
      var monthKey = "".concat(year, "-").concat(month);
      var title = (locale === null || locale === void 0 ? void 0 : locale.yearText) === '年' ? year + locale.yearText + locale.months[month] : "".concat(locale === null || locale === void 0 ? void 0 : locale.months[month], " ").concat(year);
      return /*#__PURE__*/_react.default.createElement("section", {
        key: monthKey,
        className: "".concat(prefixCls, "__month"),
        title: title,
        ref: function ref(n) {
          _this2.node = n;
        }
      }, /*#__PURE__*/_react.default.createElement("ul", null, this.renderContent(year, month)));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, state) {
      if ( // eslint-disable-next-line operator-linebreak
      'value' in nextProps && nextProps.value !== state.value || 'dateMonth' in nextProps && nextProps.dateMonth !== state.dateMonth) {
        return {
          value: nextProps.value,
          dateMonth: nextProps.dateMonth
        };
      }

      return null;
    }
  }]);
  return CalendarMonthView;
}(_react.Component);

CalendarMonthView.displayName = 'CalendarMonthView';
CalendarMonthView.defaultProps = {
  prefixCls: 'za-calendar',
  value: [],
  dateMonth: new Date(),
  min: new Date(),
  max: new Date(),
  dateRender: function dateRender(date) {
    return date.getDate();
  },
  disabledDate: function disabledDate() {
    return false;
  }
};

var _default = (0, _configReceiver.default)('Calendar')(CalendarMonthView);

exports.default = _default;