"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireDefault(require("react"));

var _events = _interopRequireDefault(require("../utils/events"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var ClickOutside = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2.default)(ClickOutside, _React$Component);

  var _super = _createSuper(ClickOutside);

  function ClickOutside() {
    var _this;

    (0, _classCallCheck2.default)(this, ClickOutside);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.isTouch = false;
    _this.container = null;

    _this.mountContainer = function (node) {
      _this.container = node;
    };

    _this.handle = function (event) {
      if (event.type === 'touchend') {
        _this.isTouch = true;
      }

      if (event.type === 'click' && _this.isTouch) return;
      var _this$props = _this.props,
          onClickOutside = _this$props.onClickOutside,
          ignoredNode = _this$props.ignoredNode;
      if (!onClickOutside) return;
      var el = _this.container;
      if (ignoredNode && ignoredNode.contains(event.target)) return;
      if (el && !el.contains(event.target)) onClickOutside(event);
    };

    return _this;
  }

  (0, _createClass2.default)(ClickOutside, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var disabled = this.props.disabled;

      if (!disabled) {
        this.bindEvent();
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var disabled = this.props.disabled;

      if (prevProps.disabled !== disabled) {
        if (disabled) {
          this.unBindEvent();
        } else {
          this.bindEvent();
        }
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var disabled = this.props.disabled;

      if (!disabled) {
        this.unBindEvent();
      }
    }
  }, {
    key: "bindEvent",
    value: function bindEvent() {
      _events.default.on(document, 'click', this.handle);

      _events.default.on(document, 'touchend', this.handle);
    }
  }, {
    key: "unBindEvent",
    value: function unBindEvent() {
      _events.default.off(document, 'click', this.handle);

      _events.default.off(document, 'touchend', this.handle);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          onClickOutside = _this$props2.onClickOutside,
          disabled = _this$props2.disabled,
          children = _this$props2.children,
          ignoredNode = _this$props2.ignoredNode,
          rest = (0, _objectWithoutProperties2.default)(_this$props2, ["onClickOutside", "disabled", "children", "ignoredNode"]);
      return /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({
        ref: this.mountContainer
      }, rest), children);
    }
  }]);
  return ClickOutside;
}(_react.default.Component);

exports.default = ClickOutside;
ClickOutside.defaultProps = {
  disabled: false
};