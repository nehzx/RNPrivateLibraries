"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.animationModifier = exports.getKeyFrameModifier = void 0;

var _constants = require("./constants");

var getHorizontal = function getHorizontal(distance, key) {
  return "@-webkit-keyframes ".concat(key, " {\n      100% {\n        -webkit-transform: translate3d(").concat(distance, "px, 0, 0);\n        transform: translate3d(").concat(distance, "px, 0, 0);\n      }\n    }\n    @keyframes ").concat(key, " {\n      100% {\n        -webkit-transform: translate3d(").concat(distance, "px, 0, 0);\n        transform: translate3d(").concat(distance, "px, 0, 0);\n      }\n    }");
};

var getVertical = function getVertical(distance, key) {
  return "@-webkit-keyframes ".concat(key, " {\n    100% {\n      -webkit-transform: translate3d(0, ").concat(distance, "px, 0);\n      transform: translate3d(0, ").concat(distance, "px, 0);\n    }\n  }\n  @keyframes ").concat(key, " {\n    100% {\n      -webkit-transform: translate3d(0, ").concat(distance, "px, 0);\n      transform: translate3d(0, ").concat(distance, "px, 0);\n    }\n  }");
};

var directionLeft = function directionLeft(distance, key) {
  return getHorizontal(-distance, key);
};

var directionRight = function directionRight(distance, key) {
  return getHorizontal(distance, key);
};

var directionUp = function directionUp(distance, key) {
  return getVertical(-distance, key);
};

var directionDown = function directionDown(distance, key) {
  return getVertical(distance, key);
};

var animationModifier = function animationModifier(duration, loop, delay, key) {
  var infinite = loop ? 'infinite' : 1;
  return "".concat(duration, "ms ").concat(key, " ").concat(delay, "ms linear ").concat(infinite);
};

exports.animationModifier = animationModifier;

var getKeyFrameModifier = function getKeyFrameModifier(direction) {
  var dir = direction.toLowerCase();

  switch (dir) {
    case _constants.DIRECTION_LEFT:
      return directionLeft;

    case _constants.DIRECTION_RIGHT:
      return directionRight;

    case _constants.DIRECTION_UP:
      return directionUp;

    case _constants.DIRECTION_DOWN:
      return directionDown;

    default:
      return directionLeft;
  }
};

exports.getKeyFrameModifier = getKeyFrameModifier;