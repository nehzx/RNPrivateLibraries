"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var NavBar = /*#__PURE__*/function (_React$PureComponent) {
  (0, _inherits2.default)(NavBar, _React$PureComponent);

  var _super = _createSuper(NavBar);

  function NavBar() {
    (0, _classCallCheck2.default)(this, NavBar);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(NavBar, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          prefixCls = _this$props.prefixCls,
          className = _this$props.className,
          style = _this$props.style,
          title = _this$props.title,
          left = _this$props.left,
          right = _this$props.right;
      var cls = (0, _classnames.default)(prefixCls, className);
      var titleCls = "".concat(prefixCls, "__title");
      var sideCls = "".concat(prefixCls, "__side");
      var leftCls = "".concat(sideCls, " ").concat(prefixCls, "__side--left");
      var rightCls = "".concat(sideCls, " ").concat(prefixCls, "__side--right");
      return /*#__PURE__*/_react.default.createElement("div", {
        style: style,
        className: cls
      }, /*#__PURE__*/_react.default.createElement("div", {
        className: leftCls
      }, left), /*#__PURE__*/_react.default.createElement("div", {
        className: titleCls
      }, title), /*#__PURE__*/_react.default.createElement("div", {
        className: rightCls
      }, right));
    }
  }]);
  return NavBar;
}(_react.default.PureComponent);

exports.default = NavBar;
NavBar.displayName = 'NavBar';
NavBar.defaultProps = {
  prefixCls: 'za-nav-bar'
};