"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _index = _interopRequireDefault(require("./style/index.native"));

var _index2 = _interopRequireDefault(require("../message/index.native"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var noticeBarStyles = _reactNative.StyleSheet.create(_index.default);

var NoticeBar = /*#__PURE__*/function (_PureComponent) {
  (0, _inherits2.default)(NoticeBar, _PureComponent);

  var _super = _createSuper(NoticeBar);

  function NoticeBar(props) {
    var _this;

    (0, _classCallCheck2.default)(this, NoticeBar);
    _this = _super.call(this, props);
    _this.content = void 0;
    _this.wrapper = void 0;
    _this.moveInterval = void 0;

    _this.layout = function (ref) {
      var handle = (0, _reactNative.findNodeHandle)(ref);

      if (!handle) {
        return Promise.resolve(0);
      }

      return new Promise(function (resolve) {
        setTimeout(function () {
          _reactNative.UIManager.measure(handle, function (x, y, width, height, pageX, pageY) {
            // x,y 当前container的坐标, width, height 是宽高, pageX, pageY 是在屏幕中的坐标（起始坐标）
            var result = {
              x: x,
              y: y,
              width: width,
              height: height,
              pageX: pageX,
              pageY: pageY
            };
            resolve(result.width);
          });
        });
      });
    };

    _this.state = {
      offset: 0
    };
    return _this;
  }

  (0, _createClass2.default)(NoticeBar, [{
    key: "componentDidMount",
    value: function () {
      var _componentDidMount = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
        var _this2 = this;

        var _this$props, delay, speed, asyncWrapper, asyncContent, wrapperWidth, contentWidth, distance, animateDelay;

        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _this$props = this.props, delay = _this$props.delay, speed = _this$props.speed;
                asyncWrapper = this.layout(this.wrapper);
                asyncContent = this.layout(this.content);
                _context.next = 5;
                return asyncWrapper;

              case 5:
                wrapperWidth = _context.sent;
                _context.next = 8;
                return asyncContent;

              case 8:
                contentWidth = _context.sent;
                distance = wrapperWidth - contentWidth;

                if (!(distance > 0)) {
                  _context.next = 12;
                  break;
                }

                return _context.abrupt("return");

              case 12:
                animateDelay = delay;
                this.moveInterval = setInterval(function () {
                  var offset = _this2.state.offset;

                  if ((offset < distance || offset >= 0) && animateDelay > 0) {
                    animateDelay -= speed;
                    return;
                  }

                  animateDelay = delay;
                  offset = offset < distance ? 0 : offset - 1;

                  _this2.setState({
                    offset: offset
                  });
                }, 50);

              case 14:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function componentDidMount() {
        return _componentDidMount.apply(this, arguments);
      }

      return componentDidMount;
    }()
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.moveInterval) {
        clearInterval(this.moveInterval);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var _this$props2 = this.props,
          theme = _this$props2.theme,
          closable = _this$props2.closable,
          styles = _this$props2.styles,
          children = _this$props2.children,
          others = (0, _objectWithoutProperties2.default)(_this$props2, ["theme", "closable", "styles", "children"]);
      var offset = this.state.offset;
      var textStyle = [styles.textStyle, styles["".concat(theme, "TextStyle")]];
      var wrapperProps = {
        theme: theme,
        closable: closable,
        children: children
      };
      return /*#__PURE__*/_react.default.createElement(_index2.default, (0, _extends2.default)({}, wrapperProps, others, {
        size: "lg"
      }), /*#__PURE__*/_react.default.createElement(_reactNative.ScrollView, {
        horizontal: true,
        ref: function ref(view) {
          _this3.wrapper = view;
        },
        scrollEnabled: false,
        showsHorizontalScrollIndicator: false
      }, /*#__PURE__*/_react.default.createElement(_reactNative.Text, {
        ref: function ref(view) {
          _this3.content = view;
        },
        style: [textStyle, {
          left: offset
        }]
      }, children)));
    }
  }]);
  return NoticeBar;
}(_react.PureComponent);

exports.default = NoticeBar;
NoticeBar.defaultProps = {
  theme: 'warning',
  hasArrow: false,
  closable: false,
  speed: 50,
  delay: 2000,
  styles: noticeBarStyles
};