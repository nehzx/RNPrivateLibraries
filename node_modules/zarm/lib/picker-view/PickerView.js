"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _isEqual = _interopRequireDefault(require("lodash/isEqual"));

var _wheel = _interopRequireDefault(require("../wheel"));

var _validate = require("../utils/validate");

var _parseProps = _interopRequireDefault(require("./utils/parseProps"));

var _removeFnFromProps = _interopRequireDefault(require("./utils/removeFnFromProps"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var PickerView = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(PickerView, _Component);

  var _super = _createSuper(PickerView);

  function PickerView() {
    var _this;

    (0, _classCallCheck2.default)(this, PickerView);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = _parseProps.default.getSource(_this.props);

    _this.onValueChange = function (selected, level) {
      var value = _this.state.value.slice();

      var _this$props = _this.props,
          dataSource = _this$props.dataSource,
          onChange = _this$props.onChange,
          valueMember = _this$props.valueMember,
          cols = _this$props.cols;

      if ((0, _validate.isCascader)({
        dataSource: dataSource
      })) {
        value.length = level + 1;
      }

      value[level] = selected;

      var newState = _parseProps.default.getSource({
        dataSource: dataSource,
        value: value,
        valueMember: valueMember,
        cols: cols
      });

      _this.setState(newState);

      if (typeof onChange === 'function') {
        onChange(newState.objValue, level);
      }
    };

    _this.renderWheel = function () {
      var _this$props2 = _this.props,
          valueMember = _this$props2.valueMember,
          itemRender = _this$props2.itemRender,
          disabled = _this$props2.disabled,
          stopScroll = _this$props2.stopScroll;
      var _this$state = _this.state,
          dataSource = _this$state.dataSource,
          value = _this$state.value;
      return dataSource.map(function (item, index) {
        return /*#__PURE__*/_react.default.createElement(_wheel.default, {
          key: +index,
          dataSource: item,
          value: value[index],
          valueMember: valueMember,
          itemRender: itemRender,
          disabled: disabled,
          onChange: function onChange(selected) {
            return _this.onValueChange(selected, index);
          },
          stopScroll: stopScroll
        });
      });
    };

    return _this;
  }

  (0, _createClass2.default)(PickerView, [{
    key: "render",
    value: function render() {
      var _this$props3 = this.props,
          prefixCls = _this$props3.prefixCls,
          className = _this$props3.className;
      var cls = (0, _classnames.default)(prefixCls, className);
      return /*#__PURE__*/_react.default.createElement("div", {
        className: cls
      }, /*#__PURE__*/_react.default.createElement("div", {
        className: "".concat(prefixCls, "__content")
      }, this.renderWheel()), /*#__PURE__*/_react.default.createElement("div", {
        className: "".concat(prefixCls, "__mask ").concat(prefixCls, "__mask--top")
      }), /*#__PURE__*/_react.default.createElement("div", {
        className: "".concat(prefixCls, "__mask ").concat(prefixCls, "__mask--bottom")
      }));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: // TODO: is this method still be used?
    function getDerivedStateFromProps(props, state) {
      if (!(0, _isEqual.default)((0, _removeFnFromProps.default)(props, ['onChange']), (0, _removeFnFromProps.default)(state.prevProps, ['onChange']))) {
        return _objectSpread({
          prevProps: props
        }, _parseProps.default.getSource(props));
      }

      return null;
    }
  }]);
  return PickerView;
}(_react.Component);

exports.default = PickerView;
PickerView.defaultProps = {
  prefixCls: 'za-picker-view',
  dataSource: [],
  cols: Infinity,
  valueMember: 'value',
  itemRender: function itemRender(data) {
    return data.label;
  },
  disabled: false
};