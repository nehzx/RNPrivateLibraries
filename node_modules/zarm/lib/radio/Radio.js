"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _classnames2 = _interopRequireDefault(require("classnames"));

var _cell = _interopRequireDefault(require("../cell"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var getChecked = function getChecked(props, defaultChecked) {
  if (typeof props.checked !== 'undefined') {
    return props.checked;
  }

  if (typeof props.defaultChecked !== 'undefined') {
    return props.defaultChecked;
  }

  return defaultChecked;
};

var Radio = /*#__PURE__*/function (_PureComponent) {
  (0, _inherits2.default)(Radio, _PureComponent);

  var _super = _createSuper(Radio);

  function Radio() {
    var _this;

    (0, _classCallCheck2.default)(this, Radio);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = {
      checked: getChecked(_this.props, false)
    };

    _this.onValueChange = function (e) {
      var _this$props = _this.props,
          disabled = _this$props.disabled,
          onChange = _this$props.onChange;
      var checked = _this.state.checked;

      if (disabled) {
        return;
      }

      var newChecked = !checked;

      if (!('checked' in _this.props)) {
        _this.setState({
          checked: newChecked
        });
      }

      if (typeof onChange === 'function') {
        onChange(e);
      }
    };

    return _this;
  }

  (0, _createClass2.default)(Radio, [{
    key: "render",
    value: function render() {
      var _classnames;

      var _this$props2 = this.props,
          prefixCls = _this$props2.prefixCls,
          className = _this$props2.className,
          type = _this$props2.type,
          shape = _this$props2.shape,
          value = _this$props2.value,
          checked = _this$props2.checked,
          defaultChecked = _this$props2.defaultChecked,
          disabled = _this$props2.disabled,
          id = _this$props2.id,
          children = _this$props2.children,
          onChange = _this$props2.onChange,
          rest = (0, _objectWithoutProperties2.default)(_this$props2, ["prefixCls", "className", "type", "shape", "value", "checked", "defaultChecked", "disabled", "id", "children", "onChange"]);
      var checkedState = this.state.checked;
      var cls = (0, _classnames2.default)(prefixCls, className, (_classnames = {}, (0, _defineProperty2.default)(_classnames, "".concat(prefixCls, "--checked"), checkedState), (0, _defineProperty2.default)(_classnames, "".concat(prefixCls, "--disabled"), disabled), (0, _defineProperty2.default)(_classnames, "".concat(prefixCls, "--untext"), !children), _classnames));

      var inputRender = /*#__PURE__*/_react.default.createElement("input", {
        id: id,
        type: "radio",
        className: "".concat(prefixCls, "__input"),
        value: value,
        disabled: disabled,
        checked: checkedState,
        onChange: this.onValueChange
      });

      var radioRender = /*#__PURE__*/_react.default.createElement("span", (0, _extends2.default)({
        className: cls
      }, rest), /*#__PURE__*/_react.default.createElement("span", {
        className: "".concat(prefixCls, "__widget")
      }, /*#__PURE__*/_react.default.createElement("span", {
        className: "".concat(prefixCls, "__inner")
      })), children && /*#__PURE__*/_react.default.createElement("span", {
        className: "".concat(prefixCls, "__text")
      }, children), inputRender);

      if (type === 'cell') {
        return /*#__PURE__*/_react.default.createElement(_cell.default, (0, _extends2.default)({
          disabled: disabled,
          className: className,
          onClick: function onClick() {}
        }, rest), radioRender);
      }

      if (type === 'button') {
        return /*#__PURE__*/_react.default.createElement("button", (0, _extends2.default)({
          type: "button",
          disabled: disabled,
          className: cls
        }, rest), children, inputRender);
      }

      return radioRender;
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, state) {
      if ('checked' in nextProps && nextProps.checked !== state.prevChecked) {
        return {
          checked: nextProps.checked,
          prevChecked: nextProps.checked
        };
      }

      return null;
    }
  }]);
  return Radio;
}(_react.PureComponent);

exports.default = Radio;
Radio.Group = void 0;
Radio.defaultProps = {
  prefixCls: 'za-radio',
  disabled: false,
  shape: 'radius'
};