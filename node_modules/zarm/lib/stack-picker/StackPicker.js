"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _classnames3 = _interopRequireDefault(require("classnames"));

var _popup = _interopRequireDefault(require("../popup"));

var _Actions = _interopRequireDefault(require("./Actions"));

var stopPropagation = function stopPropagation(e) {
  e.stopPropagation();
};

var _default = /*#__PURE__*/(0, _react.memo)(function (_ref) {
  var _ref$prefixCls = _ref.prefixCls,
      prefixCls = _ref$prefixCls === void 0 ? 'za-stack-picker' : _ref$prefixCls,
      className = _ref.className,
      dataSource = _ref.dataSource,
      defaultValue = _ref.defaultValue,
      value = _ref.value,
      _ref$displayMember = _ref.displayMember,
      displayMember = _ref$displayMember === void 0 ? 'label' : _ref$displayMember,
      _ref$valueMember = _ref.valueMember,
      valueMember = _ref$valueMember === void 0 ? 'value' : _ref$valueMember,
      _ref$title = _ref.title,
      title = _ref$title === void 0 ? '请选择' : _ref$title,
      _ref$visible = _ref.visible,
      visible = _ref$visible === void 0 ? false : _ref$visible,
      _ref$cols = _ref.cols,
      cols = _ref$cols === void 0 ? Infinity : _ref$cols,
      _ref$labelAddon = _ref.labelAddon,
      labelAddon = _ref$labelAddon === void 0 ? ' > ' : _ref$labelAddon,
      displayRender = _ref.displayRender,
      _ref$itemRender = _ref.itemRender,
      itemRender = _ref$itemRender === void 0 ? function (data) {
    return data[displayMember];
  } : _ref$itemRender,
      onChangeValidate = _ref.onChangeValidate,
      cancelText = _ref.cancelText,
      okText = _ref.okText,
      onChange = _ref.onChange,
      onOk = _ref.onOk,
      onCancel = _ref.onCancel,
      _ref$maskClosable = _ref.maskClosable,
      maskClosable = _ref$maskClosable === void 0 ? false : _ref$maskClosable,
      locale = _ref.locale;

  var _useState = (0, _react.useState)(''),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      errorMsg = _useState2[0],
      setErrorMsg = _useState2[1];

  var _useState3 = (0, _react.useState)([]),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      currentValue = _useState4[0],
      setCurrentValue = _useState4[1];

  var _useState5 = (0, _react.useState)(visible),
      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
      currentVisible = _useState6[0],
      setCurrentVisible = _useState6[1];

  var handleObtainItem = (0, _react.useCallback)(function (list, _value) {
    return list.find(function (item) {
      return item[valueMember] === _value;
    });
  }, [valueMember]);
  (0, _react.useEffect)(function () {
    setCurrentVisible(visible);
  }, [visible]);
  /**
   * 初始化列表值
   */

  (0, _react.useEffect)(function () {
    var initValue = [];
    var v = value || defaultValue || [];
    v.reduce(function (accumulator, _currentValue) {
      var valueItem = handleObtainItem(accumulator, _currentValue);

      if (valueItem) {
        initValue.push(valueItem);
        return valueItem.children || [];
      }

      return [];
    }, dataSource);
    setCurrentValue(initValue);
  }, [dataSource, handleObtainItem, value, defaultValue]);
  /**
   * 点击遮罩
   */

  var handleMaskClick = function handleMaskClick() {
    if (!maskClosable) return;

    if (onCancel) {
      if (typeof onCancel !== 'function') {
        console.error('onCancel need a function');
      } else {
        onCancel();
      }
    }

    setCurrentVisible(!currentVisible);
  };
  /**
   * 点击取消按钮
   */


  var handleCancel = function handleCancel() {
    if (onCancel) {
      if (typeof onCancel !== 'function') {
        console.error('onCancel need a function');
      } else {
        onCancel();
      }
    }
  };
  /**
   * 获取列表数据
   */


  var columnDataList = (0, _react.useMemo)(function () {
    var group = [];
    var _dataSource = dataSource;
    var i = 0;

    while (_dataSource) {
      group.push(_dataSource);
      var colVal = currentValue[i];
      var childrenData = ((colVal ? handleObtainItem(_dataSource, colVal[valueMember]) : _dataSource[0]) || {}).children;

      if (childrenData && childrenData.length && i < cols - 1) {
        _dataSource = childrenData;
      } else {
        _dataSource = null;
      }

      i += 1;
    }

    return group;
  }, [cols, currentValue, dataSource, handleObtainItem, valueMember]);
  /**
   * 修改列表值
   * @param e
   * @param index
   * @param item
   */

  var handleChange = function handleChange(e, index, item) {
    stopPropagation(e);

    var _value = currentValue.slice(0, index);

    if (item && typeof index === 'number') {
      _value[index] = item;
    }

    setCurrentValue(_value);

    if (onChangeValidate) {
      if (typeof onChangeValidate !== 'function') {
        console.error('onChangeValidate need a function');
      } else {
        var _errorMsg = onChangeValidate(value);

        setErrorMsg(_errorMsg);
      }
    }

    if (onChange) {
      if (typeof onChange !== 'function') {
        console.error('onChange need a function');
      } else {
        onChange(_value.map(function (v) {
          return v[valueMember];
        }));
      }
    }
  };
  /**
   * 点击确认按钮
   */


  var handleOk = function handleOk() {
    if (onOk) {
      if (typeof onOk !== 'function') {
        console.error('onOk need a function');
      } else {
        onOk(currentValue.map(function (v) {
          return v[valueMember];
        }));
      }
    }
  };
  /**
   * 判断是否有传入 itemRender， 否则使用默认的渲染方式
   * @param item
   */


  var handleItemRender = function handleItemRender(item) {
    return itemRender(item);
  };
  /**
   * 判断是否有传入 displayRender， 否则使用默认的渲染方式展示选择内容
   */


  var handleDisplayRender = function handleDisplayRender() {
    var _currentValue = currentValue.map(function (_ref2) {
      var children = _ref2.children,
          others = (0, _objectWithoutProperties2.default)(_ref2, ["children"]);
      return others;
    });

    if (displayRender) {
      if (typeof displayRender !== 'function') {
        console.error('displayRender need a function'); // 因为报错返回一个空字符串

        return '';
      }

      return displayRender(_currentValue);
    }

    return _currentValue.map(function (item) {
      return handleItemRender(item);
    }).join(labelAddon);
  };

  return /*#__PURE__*/_react.default.createElement(_popup.default, {
    visible: currentVisible,
    onMaskClick: handleMaskClick,
    direction: "bottom"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames3.default)(prefixCls, className)
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(prefixCls, "__container")
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(prefixCls, "__wrapper")
  }, /*#__PURE__*/_react.default.createElement(_Actions.default, {
    prefixCls: prefixCls,
    cancelText: cancelText,
    okText: okText,
    title: title,
    handleCancel: handleCancel,
    handleOk: handleOk,
    locale: locale
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(prefixCls, "__crumbs")
  }, /*#__PURE__*/_react.default.createElement("p", null, "\u9009\u62E9\uFF1A", handleDisplayRender()), errorMsg && /*#__PURE__*/_react.default.createElement("p", {
    className: "".concat(prefixCls, "__crumbs-error")
  }, errorMsg)), /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(prefixCls, "__group")
  }, columnDataList.map(function (group, index) {
    var columnClass = (0, _classnames3.default)("".concat(prefixCls, "__stack-column"), (0, _defineProperty2.default)({}, "".concat(prefixCls, "__stack-column--hidden"), !currentValue[index] || !currentValue[index][valueMember]));
    return /*#__PURE__*/_react.default.createElement("div", {
      className: columnClass,
      key: +index,
      onClick: function onClick(e) {
        return handleChange(e, index - 1);
      }
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "".concat(prefixCls, "__stack-column-wrapper"),
      onClick: function onClick(e) {
        return stopPropagation(e);
      }
    }, group.map(function (item, i) {
      var isActive = currentValue[index] && currentValue[index][valueMember] === item[valueMember];
      var columnItemClass = (0, _classnames3.default)("".concat(prefixCls, "__stack-column-item"), (0, _defineProperty2.default)({}, "".concat(prefixCls, "__stack-column-item--active"), isActive));
      var label = handleItemRender(item);
      return /*#__PURE__*/_react.default.createElement("div", {
        key: "".concat(label).concat(+i),
        className: columnItemClass,
        onClick: function onClick(e) {
          return handleChange(e, index, item);
        }
      }, label);
    })));
  }))))));
});

exports.default = _default;