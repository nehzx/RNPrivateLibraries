"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _classnames3 = _interopRequireDefault(require("classnames"));

var _icons = require("@zarm-design/icons");

var _button = _interopRequireDefault(require("../button"));

var _input = _interopRequireDefault(require("../input"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var compareValue = function compareValue(value, max, min) {
  if (typeof max === 'number') {
    value = value > max ? max : value;
  }

  if (typeof min === 'number') {
    value = value < min ? min : value;
  }

  return value;
};

var getPrecision = function getPrecision(value) {
  var valueStr = value === null || value === void 0 ? void 0 : value.toString();

  if (valueStr && valueStr.indexOf('e-') >= 0) {
    return parseInt(valueStr.slice(valueStr.indexOf('-e')), 10);
  }

  var precision = 0;

  if (valueStr && valueStr.indexOf('.') >= 0) {
    precision = valueStr.length - valueStr.indexOf('.') - 1;
  }

  return precision;
};

var getMaxPrecision = function getMaxPrecision(currentValue, step) {
  var stepPrecision = getPrecision(step);
  var currentValuePrecision = getPrecision(currentValue);
  return Math.max(currentValuePrecision, stepPrecision);
};

var getPrecisionFactor = function getPrecisionFactor(currentValue, step) {
  var precision = getMaxPrecision(currentValue, step);
  return Math.pow(10, precision);
};

var formatValue = function formatValue(currentValue, step) {
  var precision = getMaxPrecision(currentValue, step); // 小数当字符串处理，因为1.00在jstoFixed(2)返回的是字符串

  if (precision > 0) {
    return Number(currentValue).toFixed(precision);
  }

  return Number(Number(currentValue).toFixed(precision));
};

var getValue = function getValue(props, defaultValue) {
  var value = props.value,
      max = props.max,
      min = props.min,
      step = props.step;
  var tempValue = props.defaultValue === undefined ? defaultValue : props.defaultValue;
  tempValue = value === undefined ? tempValue : value;
  return formatValue(compareValue(tempValue, max, min), step);
};

var Stepper = /*#__PURE__*/function (_PureComponent) {
  (0, _inherits2.default)(Stepper, _PureComponent);

  var _super = _createSuper(Stepper);

  function Stepper() {
    var _this;

    (0, _classCallCheck2.default)(this, Stepper);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = {
      value: getValue(_this.props, 0),
      prevPropsValue: getValue(_this.props, 0),
      lastValue: getValue(_this.props, 0)
    };

    _this.onInputChange = function (value) {
      var onInputChange = _this.props.onInputChange;

      _this.setState({
        value: value
      });

      if (typeof onInputChange === 'function') {
        onInputChange(value);
      }
    };

    _this.onInputBlur = function (value) {
      var _this$props = _this.props,
          onChange = _this$props.onChange,
          step = _this$props.step,
          max = _this$props.max,
          min = _this$props.min;
      var currentValue = value;

      if (Number.isNaN(Number(value))) {
        currentValue = _this.state.lastValue;
      }

      currentValue = formatValue(compareValue(currentValue, max, min), step);

      _this.setState({
        value: currentValue,
        lastValue: currentValue
      });

      if (typeof onChange === 'function') {
        onChange(currentValue);
      }
    };

    _this.onSubClick = function () {
      var step = _this.props.step;
      var value = _this.state.value;

      if (_this.isSubDisabled()) {
        return;
      }

      var precisionFactor = getPrecisionFactor(value, step);
      var precision = getMaxPrecision(value, step);
      var newValue = (precisionFactor * Number(value) - precisionFactor * step) / precisionFactor;

      _this.onInputBlur(newValue.toFixed(precision));
    };

    _this.onPlusClick = function () {
      var step = _this.props.step;
      var value = _this.state.value;

      if (_this.isPlusDisabled()) {
        return;
      }

      var precisionFactor = getPrecisionFactor(value, step);
      var precision = getMaxPrecision(value, step);
      var newValue = (precisionFactor * Number(value) + precisionFactor * step) / precisionFactor;

      _this.onInputBlur(newValue.toFixed(precision));
    };

    _this.isSubDisabled = function () {
      var _this$props2 = _this.props,
          min = _this$props2.min,
          disabled = _this$props2.disabled;
      var value = _this.state.value;

      if (min === null) {
        return false;
      }

      return value <= min || disabled;
    };

    _this.isPlusDisabled = function () {
      var _this$props3 = _this.props,
          max = _this$props3.max,
          disabled = _this$props3.disabled;
      var value = _this.state.value;

      if (max === null) {
        return false;
      }

      return value >= max || disabled;
    };

    return _this;
  }

  (0, _createClass2.default)(Stepper, [{
    key: "render",
    value: function render() {
      var _classnames,
          _this2 = this;

      var _this$props4 = this.props,
          prefixCls = _this$props4.prefixCls,
          className = _this$props4.className,
          shape = _this$props4.shape,
          disabled = _this$props4.disabled,
          size = _this$props4.size,
          type = _this$props4.type,
          disableInput = _this$props4.disableInput;
      var value = this.state.value;
      var cls = (0, _classnames3.default)(prefixCls, className, (_classnames = {}, (0, _defineProperty2.default)(_classnames, "".concat(prefixCls, "--").concat(shape), !!shape), (0, _defineProperty2.default)(_classnames, "".concat(prefixCls, "--").concat(size), !!size), (0, _defineProperty2.default)(_classnames, "".concat(prefixCls, "--disabled"), disabled), _classnames));
      var inputCls = (0, _classnames3.default)("".concat(prefixCls, "__input "), (0, _defineProperty2.default)({}, "".concat(prefixCls, "__input--disabled"), disableInput));
      var buttonSize = size === 'lg' ? 'sm' : 'xs';
      var inputProps = {
        className: inputCls,
        type: type,
        value: value,
        disabled: disabled || disableInput,
        clearable: false,
        onChange: function onChange(v) {
          return !disabled && _this2.onInputChange(v);
        },
        onBlur: function onBlur() {
          return !disabled && _this2.onInputBlur(value);
        }
      };
      return /*#__PURE__*/_react.default.createElement("span", {
        className: cls
      }, /*#__PURE__*/_react.default.createElement(_button.default, {
        className: "".concat(prefixCls, "__sub"),
        size: buttonSize,
        disabled: this.isSubDisabled(),
        shape: shape,
        onClick: this.onSubClick
      }, /*#__PURE__*/_react.default.createElement(_icons.Minus, null)), /*#__PURE__*/_react.default.createElement(_input.default, inputProps), /*#__PURE__*/_react.default.createElement(_button.default, {
        className: "".concat(prefixCls, "__plus"),
        size: buttonSize,
        disabled: this.isPlusDisabled(),
        shape: shape,
        onClick: this.onPlusClick
      }, /*#__PURE__*/_react.default.createElement(_icons.Plus, null)));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, prevState) {
      if (typeof nextProps.value !== 'undefined' && nextProps.value !== prevState.prevPropsValue) {
        var value = getValue(nextProps, 0);
        return {
          value: value,
          lastValue: value,
          prevPropsValue: value
        };
      }

      return null;
    }
  }]);
  return Stepper;
}(_react.PureComponent);

exports.default = Stepper;
Stepper.displayName = 'Stepper';
Stepper.defaultProps = {
  prefixCls: 'za-stepper',
  shape: 'radius',
  disabled: false,
  step: 1,
  type: 'text',
  disableInput: false
};