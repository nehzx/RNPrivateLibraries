"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = warnIfDeprecated;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _hoistNonReactStatics = _interopRequireDefault(require("hoist-non-react-statics"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function getDisplayName(WrappedComponent) {
  return WrappedComponent.displayName || WrappedComponent.name || 'Component';
}

function warnIfDeprecated(deprecations) {
  return function Wrapper(WrappedComponent) {
    var WarnIfDeprecatedComp = /*#__PURE__*/function (_Component) {
      (0, _inherits2.default)(WarnIfDeprecatedComp, _Component);

      var _super = _createSuper(WarnIfDeprecatedComp);

      function WarnIfDeprecatedComp(props) {
        var _this;

        (0, _classCallCheck2.default)(this, WarnIfDeprecatedComp);
        _this = _super.call(this, props);

        if (process.env.NODE_ENV !== 'production' && deprecations.length) {
          var count = 0;
          deprecations.forEach(function (item) {
            // eslint-disable-next-line react/destructuring-assignment
            if (item.oldProp && item.newProp && _this.props[item.oldProp]) {
              console.warn("Warning: ".concat(item.oldProp, " has been renamed, and is not recommended for use.\n\n* Rename ").concat(item.oldProp, " to ").concat(item.newProp, " to suppress this warning."));
              count += 1;
            } // eslint-disable-next-line react/destructuring-assignment


            if (getDisplayName(WrappedComponent) === item.oldComponent) {
              console.warn("Warning: ".concat(item.oldComponent, " has been renamed, and is not recommended for use.\n\n* Rename ").concat(item.oldComponent, " to ").concat(item.newComponent, " to suppress this warning."));
              count += 1;
            }
          });

          if (count) {
            console.warn("Please update the following components: ".concat(getDisplayName(WrappedComponent)));
          }
        }

        return _this;
      }

      (0, _createClass2.default)(WarnIfDeprecatedComp, [{
        key: "render",
        value: function render() {
          var _this$props = this.props,
              forwardedRef = _this$props.forwardedRef,
              other = (0, _objectWithoutProperties2.default)(_this$props, ["forwardedRef"]);
          var rest = other;
          return /*#__PURE__*/_react.default.createElement(WrappedComponent, (0, _extends2.default)({
            ref: forwardedRef
          }, rest));
        }
      }]);
      return WarnIfDeprecatedComp;
    }(_react.Component);

    var forwardRefComp = function forwardRefComp(props, ref) {
      return /*#__PURE__*/_react.default.createElement(WarnIfDeprecatedComp, (0, _extends2.default)({}, props, {
        forwardedRef: ref
      }));
    };

    forwardRefComp.displayName = 'ForwardedRefComp';
    (0, _hoistNonReactStatics.default)(forwardRefComp, WrappedComponent);

    var forwardCps = /*#__PURE__*/_react.default.forwardRef(forwardRefComp);

    return forwardCps;
  };
}