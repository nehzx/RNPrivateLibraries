import React, { PureComponent } from 'react';
import type { MouseEvent, ReactPortal } from 'react';
import type BasePropsType from './PropsType';
export interface BackToTopProps extends BasePropsType {
    prefixCls?: string;
    className?: string;
    onClick?: (event?: MouseEvent<HTMLElement>) => void;
}
export interface BackToTopStates {
    visible: boolean;
}
export default class BackToTop extends PureComponent<BackToTopProps, BackToTopStates> {
    static displayName: string;
    static defaultProps: {
        prefixCls: string;
        speed: number;
        visibleDistance: number;
        scrollContainer: (Window & typeof globalThis) | undefined;
    };
    readonly state: BackToTopStates;
    private timer;
    private portalContainer;
    private scroller;
    componentDidMount(): void;
    componentDidUpdate(prevProps: BackToTopProps): void;
    componentWillUnmount(): void;
    get parent(): HTMLElement;
    get container(): HTMLElement | Window;
    get scrollTop(): number;
    get renderPortal(): ReactPortal | null;
    get getPortalContainer(): HTMLDivElement;
    onScroll: (scrollTop: number) => void;
    scrollToTop: (e: MouseEvent<HTMLDivElement>) => void;
    render(): React.ReactPortal | null;
}
