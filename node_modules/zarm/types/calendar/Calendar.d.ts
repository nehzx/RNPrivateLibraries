import { PureComponent } from 'react';
import { BaseCalendarProps } from './PropsType';
export interface CalendarProps extends BaseCalendarProps {
    prefixCls?: string;
    className?: string;
}
export interface CalendarStates {
    value: Date[];
    min: Date;
    max: Date;
    startMonth: Date;
    endMonth: Date;
    refresh: boolean;
    steps: number;
    step: number;
    multiple: boolean;
}
export default class CalendarView extends PureComponent<CalendarProps, CalendarStates> {
    static displayName: string;
    static defaultProps: CalendarProps;
    private nodes?;
    constructor(props: CalendarProps);
    state: {
        step: number;
        value: Date[];
        min: Date;
        max: Date;
        startMonth: Date;
        endMonth: Date;
        refresh: boolean;
        steps: number;
        multiple: boolean;
    };
    componentDidMount(): void;
    static getDerivedStateFromProps(nextProps: any, prevState: any): {
        step: any;
        refresh: boolean;
        prevValue: any;
        prevMax: any;
        prevMin: any;
        prevMultiple: any;
        value: Date[];
        min: Date;
        max: Date;
        startMonth: Date;
        endMonth: Date;
        steps: number;
        multiple: boolean;
    } | null;
    componentDidUpdate(_prevProps: CalendarProps, prevState: CalendarStates): void;
    handleDateClick: (date: Date) => void;
    anchor: () => void;
    renderWeekBar: () => JSX.Element;
    renderMonth: (dateMonth: Date) => JSX.Element;
    renderMonths(): JSX.Element;
    render(): JSX.Element;
}
