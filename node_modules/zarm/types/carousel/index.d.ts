import { Component } from 'react';
import PropsType from './PropsType';
export interface CarouselProps extends PropsType {
    prefixCls?: string;
    className?: string;
}
export default class Carousel extends Component<CarouselProps, any> {
    static defaultProps: CarouselProps;
    private carouselItems;
    private moveInterval;
    private translateX;
    private translateY;
    constructor(props: any);
    componentDidMount(): void;
    componentDidUpdate(prevProps: any): void;
    componentWillUnmount(): void;
    onSlideTo: (index: any) => void;
    onJumpTo: (index: any) => void;
    onMoveTo: (index: any, animationDuration: any) => void;
    onDragStart: () => false | undefined;
    onDragMove: (event: any, { offsetX, offsetY }: {
        offsetX: any;
        offsetY: any;
    }) => boolean;
    onDragEnd: (_event: any, { offsetX, offsetY, startTime }: {
        offsetX: any;
        offsetY: any;
        startTime: any;
    }) => false | undefined;
    startAutoPlay: () => void;
    pauseAutoPlay: () => void;
    parseItems: (props: any) => any;
    resize: () => void;
    doTransition: (offset: any, animationDuration: any) => void;
    transitionEnd: () => void;
    isLastIndex: () => boolean;
    isFirstIndex: () => boolean;
    isDirectionX: () => boolean;
    renderPaginationItem: (_result: any, index: any) => JSX.Element;
    renderPagination: () => false | JSX.Element | undefined;
    render(): JSX.Element;
}
