import React, { HTMLAttributes, Component } from 'react';
import { CollapseActiveKey, BaseCollapseProps } from './PropsType';
import CollapseItem, { CollapseItemProps } from './CollapseItem';
export interface CollapseProps extends Omit<HTMLAttributes<HTMLDivElement>, 'activeKey' | 'defaultActiveKey' | 'onChange'>, BaseCollapseProps {
    prefixCls?: string;
}
interface CollapseStates {
    activeKey?: CollapseActiveKey;
    prevActiveKey?: CollapseActiveKey;
    animated?: boolean;
    multiple?: boolean;
}
export default class Collapse extends Component<CollapseProps, CollapseStates> {
    static defaultProps: CollapseProps;
    static Item: typeof CollapseItem;
    state: CollapseStates;
    static getDerivedStateFromProps(nextProps: CollapseProps, state: CollapseStates): CollapseStates | null;
    onItemChange: (onItemChange: any, key: any) => void;
    renderItems: () => React.ReactElement<CollapseItemProps, string | ((props: any) => React.ReactElement<any, any> | null) | (new (props: any) => React.Component<any, any, any>)>[] | null | undefined;
    render(): JSX.Element;
}
export {};
