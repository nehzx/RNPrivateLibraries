import React, { Component, CSSProperties } from 'react';
import { BaseCollapseProps } from './PropsType';
import collapaseStyle from './style/index.native';
import { CollapseItemProps } from './CollapseItem.native';
export interface CollapseProps extends BaseCollapseProps {
    style?: CSSProperties;
    styles?: typeof collapaseStyle;
    activeKey?: any;
}
export default class Collapse extends Component<CollapseProps, any> {
    static defaultProps: {
        multiple: boolean;
        animated: boolean;
        styles: any;
        onChange: () => void;
    };
    static Item: any;
    constructor(props: any);
    static getDerivedStateFromProps(nextProps: any, state: any): any;
    shouldComponentUpdate(nextProps: any, nextState: any): boolean;
    onChange: (onItemChange: any, key: any) => void;
    renderItems(): React.ReactElement<CollapseItemProps, string | ((props: any) => React.ReactElement<any, any> | null) | (new (props: any) => React.Component<any, any, any>)>[] | null | undefined;
    render(): JSX.Element;
}
