import { Component } from 'react';
import BaseDatePickerViewProps from './PropsType';
import { parseState } from './utils/parseState';
export interface DatePickerViewProps extends BaseDatePickerViewProps {
    prefixCls?: string;
    className?: string;
}
export declare type DatePickerViewState = ReturnType<typeof parseState>;
export default class DatePickerView extends Component<DatePickerViewProps, DatePickerViewState> {
    static defaultProps: DatePickerViewProps;
    static getDerivedStateFromProps(props: any, state: any): {
        date: "" | Date | undefined;
        wheelDefault: "" | Date | undefined;
        prevProps: any;
    } | null;
    constructor(props: DatePickerViewProps);
    onValueChange: (selected: any, index: any) => void;
    getNewDate: (values: any, index: any) => any;
    getColsValue(): {
        dataSource: any[];
        value: any[];
    };
    getDateData: () => object[][];
    getTimeData: () => object[][];
    getDate(): any;
    getDefaultDate: () => Date;
    getMinYear: () => number;
    getMaxYear: () => number;
    getMinMonth: () => number;
    getMaxMonth: () => number;
    getMinDay: () => number;
    getMaxDay: () => number;
    getMinHour: () => number;
    getMaxHour: () => number;
    getMinMinute: () => number;
    getMaxMinute: () => number;
    getMinDate: () => Date;
    getMaxDate: () => Date;
    getDefaultMinDate: () => Date;
    getDefaultMaxDate: () => Date;
    clipDate: (date: any) => any;
    render(): JSX.Element;
}
