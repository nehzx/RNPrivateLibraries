import { Component } from 'react';
import type PropsType from './PropsType';
import type { Images } from './PropsType';
import type { Locale } from '../config-provider/PropsType';
export interface ImagePreviewProps extends PropsType {
    prefixCls?: string;
    className?: string;
    locale?: Locale['ImagePreview'];
}
export interface ImagePreviewState {
    images: Images;
    visible: boolean;
    activeIndex?: number;
    currentIndex?: number;
    prevVisible?: boolean;
    prevActiveIndex?: number;
    prevImages?: Images;
}
export default class ImagePreview extends Component<ImagePreviewProps, ImagePreviewState> {
    static defaultProps: {
        prefixCls: string;
        activeIndex: number;
        showPagination: boolean;
        visible: boolean;
    };
    doubleClickTimer: ReturnType<typeof setTimeout> | null;
    touchStartTime: number;
    moving: boolean;
    state: ImagePreviewState;
    static getDerivedStateFromProps(nextProps: ImagePreviewProps, state: ImagePreviewState): {
        visible: boolean;
        activeIndex: number | undefined;
        currentIndex: number | undefined;
        images: Images;
        prevVisible: boolean;
        prevActiveIndex: number | undefined;
        prevImages: readonly (string | import("./PropsType").ImageObject)[];
    } | null;
    onChange: (index: number) => void;
    close: () => false | undefined;
    loadOrigin: () => void;
    onWrapperTouchStart: () => void;
    onWrapperTouchEnd: () => void;
    onWrapperTouchMove: () => void;
    onWrapperMouseDown: () => void;
    onWrapperMouseUp: () => void;
    renderImages: () => JSX.Element[];
    renderPagination(): JSX.Element | null;
    renderOriginButton(): JSX.Element | null | undefined;
    render(): JSX.Element;
}
