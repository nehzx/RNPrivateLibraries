import { Component } from 'react';
export interface PinchZoomProps {
    prefixCls?: string;
    className?: string;
    onChange?: Function;
    minScale: number;
    maxScale: number;
}
export default class PinchZoom extends Component<PinchZoomProps, any> {
    static defaultProps: {
        prefixCls: string;
        minScale: number;
        maxScale: number;
    };
    private _container;
    private startTouchX;
    private startTouchY;
    private moveX;
    private moveY;
    private startMoveX;
    private startMoveY;
    private deltaX;
    private deltaY;
    private moving;
    private zooming;
    private scale;
    private startScale;
    private prevDistance;
    private originHeight;
    private originWidth;
    constructor(props: any);
    componentDidMount(): void;
    componentWillUnmount(): void;
    getMaxMoveX: () => number;
    getMaxMoveY(): number;
    touchstart: (event: any) => void;
    updateTransform: (scale: any, x: any, y: any) => void;
    touchmove: (event: any) => void;
    touchEnd: (event: any) => void;
    onload: (event: any) => void;
    render(): JSX.Element;
}
