import { PureComponent } from 'react';
import type { ReactPortal } from 'react';
import type PropsType from './PropsType';
export interface PortalProps extends PropsType {
    prefixCls?: string;
    className?: string;
    handlePortalUnmount?: () => void;
}
export interface PortalState {
    isPending: boolean;
}
export default class Portal extends PureComponent<PortalProps, PortalState> {
    private enterTimer;
    private mountNode?;
    private _container;
    private _reflow?;
    private popup;
    static defaultProps: PortalProps;
    constructor(props: PortalProps);
    componentDidMount(): void;
    componentDidUpdate(prevProps: PortalProps): void;
    componentWillUnmount(): void;
    animationEnd: (e: TransitionEvent | AnimationEvent) => void;
    renderMask: () => false | JSX.Element | undefined;
    onEsc: () => void;
    handleMaskClick: (e: any) => void;
    getComponent: () => JSX.Element;
    handleAnimation: () => void;
    renderPortal: () => ReactPortal | JSX.Element | null;
    createContainer: () => HTMLDivElement | undefined;
    render(): JSX.Element;
}
