import { PureComponent, ChangeEvent, InputHTMLAttributes, HTMLAttributes, ButtonHTMLAttributes } from 'react';
import { BaseRadioProps } from './PropsType';
import RadioGroup from './RadioGroup';
declare type RadioSpanProps = Omit<InputHTMLAttributes<HTMLInputElement>, 'type' | 'defaultChecked' | 'checked' | 'value' | 'onChange'>;
declare type RadioCellProps = Omit<HTMLAttributes<HTMLDivElement>, 'type' | 'defaultChecked' | 'checked' | 'value' | 'onChange'>;
declare type RadioButtonProps = Omit<ButtonHTMLAttributes<HTMLButtonElement>, 'type' | 'defaultChecked' | 'checked' | 'value' | 'onChange'>;
export declare type RadioProps = Partial<RadioSpanProps & RadioCellProps & RadioButtonProps> & BaseRadioProps & {
    prefixCls?: string;
};
export interface RadioStates {
    checked: boolean;
}
export default class Radio extends PureComponent<RadioProps, RadioStates> {
    static Group: typeof RadioGroup;
    static defaultProps: RadioProps;
    state: RadioStates;
    static getDerivedStateFromProps(nextProps: RadioProps, state: any): {
        checked: boolean | undefined;
        prevChecked: boolean | undefined;
    } | null;
    onValueChange: (e: ChangeEvent<HTMLInputElement>) => void;
    render(): JSX.Element;
}
export {};
