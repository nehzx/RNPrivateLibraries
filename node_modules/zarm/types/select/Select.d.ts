import { PureComponent } from 'react';
import BaseSelectProps from './PropsType';
import { WheelItem } from '../wheel/PropsType';
export interface SelectProps extends BaseSelectProps {
    prefixCls?: string;
    className?: string;
}
export interface SelectState {
    selectValue: Array<WheelItem>;
    visible: boolean;
}
export default class Select extends PureComponent<SelectProps, SelectState> {
    static defaultProps: {
        prefixCls: string;
        dataSource: never[];
        valueMember: string;
        itemRender: (data: any) => any;
        cols: number;
        hasArrow: boolean;
        maskClosable: boolean;
        displayRender: (selected: any) => any;
        onClick: () => void;
    };
    constructor(props: any);
    static getDerivedStateFromProps(props: any, state: any): {
        prevProps: any;
        selectValue: any;
    } | null;
    handleClick: () => false | undefined;
    onChange: (selected: any) => void;
    onOk: (selected: any) => void;
    onCancel: () => void;
    render(): JSX.Element;
}
