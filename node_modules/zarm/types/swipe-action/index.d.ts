import React, { PureComponent } from 'react';
import PropsType from './PropsType';
export interface SwipeActionProps extends PropsType {
    prefixCls?: string;
    className?: string;
}
export default class SwipeAction extends PureComponent<SwipeActionProps, any> {
    private isOpen;
    private touchEnd;
    private wrap;
    private left;
    private right;
    static defaultProps: SwipeActionProps;
    constructor(props: any);
    componentDidMount(): void;
    componentWillUnmount(): void;
    onDragStart: () => void;
    onDragMove: (event: any, { offsetX, offsetY }: {
        offsetX: any;
        offsetY: any;
    }) => boolean;
    onDragEnd: (_event: any, { offsetX, startTime }: {
        offsetX: any;
        startTime: any;
    }) => void;
    onCloseSwipe: (e: any) => void;
    open: (offsetLeft: any) => void;
    close: () => void;
    doTransition: ({ offsetLeft, animationDuration }: {
        offsetLeft: any;
        animationDuration: any;
    }) => void;
    renderButton: (button: any, index: any) => React.DetailedReactHTMLElement<{
        key: number;
        onClick: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;
    }, HTMLElement>;
    renderButtons: (buttons: any, direction: any) => JSX.Element | undefined;
    render(): {} | null | undefined;
}
