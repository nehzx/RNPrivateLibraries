/// <reference types="react" />
import { StringPropertyNames } from './utilityTypes';
export declare type ContainerType = HTMLElement | (() => HTMLElement) | Window;
export declare const getTop: (ele: HTMLElement) => number;
export declare const getLeft: (ele: HTMLElement) => number;
export declare const getBoundingClientRect: (ele: Element) => Omit<DOMRectReadOnly, 'x' | 'y' | 'toJSON'>;
export declare const isNumeric: (n: any) => boolean;
export declare const setStyle: (ele: HTMLElement, styles: {
    [prop: string]: import("react").ReactText;
}) => void;
declare type Property = StringPropertyNames<CSSStyleDeclaration>;
export declare const getStyleComputedProperty: (ele: Element, property: Property) => string;
export declare const isFixed: (ele: any) => boolean;
export declare const getOuterSizes: (ele: any) => {
    width: any;
    height: any;
};
export declare const getOffsetParent: (ele: any) => any;
export declare const getScrollParent: (ele: any) => HTMLElement;
export declare const getSupportedPropertyName: (property: any) => any;
export declare const getScrollTop: (ele: HTMLElement | Window) => number;
export declare const getScrollLeft: (ele: HTMLElement | Window) => number;
export declare const getMountContainer: (mountContainer?: HTMLElement | Window | (() => HTMLElement) | undefined) => HTMLElement;
export declare const getScrollContainer: (mountContainer?: HTMLElement | Window | (() => HTMLElement) | undefined) => HTMLElement | Window;
export declare function scrollTo(scrollContainer: HTMLElement | Window, top: number, left: number, duration: number): void;
export declare const canUseDOM: boolean;
export {};
